
006KeyboardInput.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001234  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  080013b8  080013b8  000023b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001410  08001410  00003064  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001410  08001410  00002410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001418  08001418  00003064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001418  08001418  00002418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800141c  0800141c  0000241c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  08001420  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00003064  2**0
                  CONTENTS
 10 .bss          00000218  20000064  20000064  00003064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000027c  2000027c  00003064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00003064  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000032b  00000000  00000000  0000308e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001ab  00000000  00000000  000033b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00003568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000046  00000000  00000000  000035d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000021f7  00000000  00000000  0000361e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c07  00000000  00000000  00005815  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00007f35  00000000  00000000  0000641c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000e351  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ac4  00000000  00000000  0000e394  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000092  00000000  00000000  0000ee58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000064 	.word	0x20000064
 80001a0:	00000000 	.word	0x00000000
 80001a4:	080013a0 	.word	0x080013a0

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000068 	.word	0x20000068
 80001c0:	080013a0 	.word	0x080013a0

080001c4 <strlen>:
 80001c4:	4603      	mov	r3, r0
 80001c6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ca:	2a00      	cmp	r2, #0
 80001cc:	d1fb      	bne.n	80001c6 <strlen+0x2>
 80001ce:	1a18      	subs	r0, r3, r0
 80001d0:	3801      	subs	r0, #1
 80001d2:	4770      	bx	lr

080001d4 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b088      	sub	sp, #32
 80001d8:	af00      	add	r7, sp, #0
    // instantiate pointer variables to different memory mapped registers
	volatile uint32_t *const rcc_ahb2en = (volatile uint32_t *)AHB2ENR_BASE_ADDR;
 80001da:	4b81      	ldr	r3, [pc, #516]	@ (80003e0 <main+0x20c>)
 80001dc:	61bb      	str	r3, [r7, #24]
	volatile uint32_t *const gpioa_mode = (volatile uint32_t *)GPIOA_MODER_ADDR;
 80001de:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80001e2:	617b      	str	r3, [r7, #20]
	volatile const uint32_t *const gpioa_input = (volatile uint32_t *)GPIOA_IDR_ADDR;
 80001e4:	4b7f      	ldr	r3, [pc, #508]	@ (80003e4 <main+0x210>)
 80001e6:	613b      	str	r3, [r7, #16]
	volatile uint32_t *const gpioa_output = (volatile uint32_t *)GPIOA_ODR_ADDR;
 80001e8:	4b7f      	ldr	r3, [pc, #508]	@ (80003e8 <main+0x214>)
 80001ea:	60fb      	str	r3, [r7, #12]
	volatile uint32_t *const gpioa_pupdn = (volatile uint32_t *)GPIOA_PUPDR_ADDR;
 80001ec:	4b7f      	ldr	r3, [pc, #508]	@ (80003ec <main+0x218>)
 80001ee:	60bb      	str	r3, [r7, #8]

	// enable clock for GPIOA
	*rcc_ahb2en |= (1 << 0);
 80001f0:	69bb      	ldr	r3, [r7, #24]
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	f043 0201 	orr.w	r2, r3, #1
 80001f8:	69bb      	ldr	r3, [r7, #24]
 80001fa:	601a      	str	r2, [r3, #0]

	/* configure modes of desired GPIOA pins */

	// input pins
	// first, clear all the pins
	*gpioa_mode &= ~(0xFFFFUL << 0);
 80001fc:	697b      	ldr	r3, [r7, #20]
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	0c1b      	lsrs	r3, r3, #16
 8000202:	041b      	lsls	r3, r3, #16
 8000204:	697a      	ldr	r2, [r7, #20]
 8000206:	6013      	str	r3, [r2, #0]

	// since input configuration is 00, inputs already configured
	// configure output pins
	*gpioa_mode |= (0x55UL << 8);
 8000208:	697b      	ldr	r3, [r7, #20]
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	f443 42aa 	orr.w	r2, r3, #21760	@ 0x5500
 8000210:	697b      	ldr	r3, [r7, #20]
 8000212:	601a      	str	r2, [r3, #0]

	/* configure pull-up for the chosen input pins */
	// first, clear all the pins
	*gpioa_pupdn &= ~(0xFFFFUL << 0);
 8000214:	68bb      	ldr	r3, [r7, #8]
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	0c1b      	lsrs	r3, r3, #16
 800021a:	041b      	lsls	r3, r3, #16
 800021c:	68ba      	ldr	r2, [r7, #8]
 800021e:	6013      	str	r3, [r2, #0]

	// then, set them to pull-up
	*gpioa_pupdn |= (0x55UL << 0);
 8000220:	68bb      	ldr	r3, [r7, #8]
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	f043 0255 	orr.w	r2, r3, #85	@ 0x55
 8000228:	68bb      	ldr	r3, [r7, #8]
 800022a:	601a      	str	r2, [r3, #0]

	/* note that ODR reset value is 0x0 */
	// set the higher 3 pins to high
	*gpioa_output |= (0x7 << 5);
 800022c:	68fb      	ldr	r3, [r7, #12]
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	f043 02e0 	orr.w	r2, r3, #224	@ 0xe0
 8000234:	68fb      	ldr	r3, [r7, #12]
 8000236:	601a      	str	r2, [r3, #0]

	/* end of configurations */

	initialise_monitor_handles();
 8000238:	f001 f834 	bl	80012a4 <initialise_monitor_handles>

	/* Loop forever */
	for(;;)
	{
		for (uint8_t row_checker = 1; row_checker < 5; ++row_checker)
 800023c:	2301      	movs	r3, #1
 800023e:	77fb      	strb	r3, [r7, #31]
 8000240:	e0c2      	b.n	80003c8 <main+0x1f4>
		{
			uint8_t g_i = (*gpioa_input ^ (0xF));
 8000242:	693b      	ldr	r3, [r7, #16]
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	b2db      	uxtb	r3, r3
 8000248:	f083 030f 	eor.w	r3, r3, #15
 800024c:	71fb      	strb	r3, [r7, #7]
			g_i &= ~(0xF << 4);
 800024e:	79fb      	ldrb	r3, [r7, #7]
 8000250:	f003 030f 	and.w	r3, r3, #15
 8000254:	71fb      	strb	r3, [r7, #7]

			switch (g_i)
 8000256:	79fb      	ldrb	r3, [r7, #7]
 8000258:	2b08      	cmp	r3, #8
 800025a:	f200 80a5 	bhi.w	80003a8 <main+0x1d4>
 800025e:	a201      	add	r2, pc, #4	@ (adr r2, 8000264 <main+0x90>)
 8000260:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000264:	080003a9 	.word	0x080003a9
 8000268:	08000289 	.word	0x08000289
 800026c:	080002cf 	.word	0x080002cf
 8000270:	080003a9 	.word	0x080003a9
 8000274:	08000313 	.word	0x08000313
 8000278:	080003a9 	.word	0x080003a9
 800027c:	080003a9 	.word	0x080003a9
 8000280:	080003a9 	.word	0x080003a9
 8000284:	08000357 	.word	0x08000357
			{
			case (0):
				break;

			case (1):
				delay();
 8000288:	f000 f8d2 	bl	8000430 <delay>
				switch (row_checker)
 800028c:	7ffb      	ldrb	r3, [r7, #31]
 800028e:	3b01      	subs	r3, #1
 8000290:	2b03      	cmp	r3, #3
 8000292:	f200 8082 	bhi.w	800039a <main+0x1c6>
 8000296:	a201      	add	r2, pc, #4	@ (adr r2, 800029c <main+0xc8>)
 8000298:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800029c:	080002ad 	.word	0x080002ad
 80002a0:	080002b5 	.word	0x080002b5
 80002a4:	080002bd 	.word	0x080002bd
 80002a8:	080002c5 	.word	0x080002c5
				{
				case (1):
					printf("1\n");
 80002ac:	4850      	ldr	r0, [pc, #320]	@ (80003f0 <main+0x21c>)
 80002ae:	f000 fa4b 	bl	8000748 <puts>
					break;
 80002b2:	e00b      	b.n	80002cc <main+0xf8>
				case (2):
					printf("4\n");
 80002b4:	484f      	ldr	r0, [pc, #316]	@ (80003f4 <main+0x220>)
 80002b6:	f000 fa47 	bl	8000748 <puts>
					break;
 80002ba:	e007      	b.n	80002cc <main+0xf8>
				case (3):
					printf("7\n");
 80002bc:	484e      	ldr	r0, [pc, #312]	@ (80003f8 <main+0x224>)
 80002be:	f000 fa43 	bl	8000748 <puts>
					break;
 80002c2:	e003      	b.n	80002cc <main+0xf8>
				case (4):
					printf("*\n");
 80002c4:	484d      	ldr	r0, [pc, #308]	@ (80003fc <main+0x228>)
 80002c6:	f000 fa3f 	bl	8000748 <puts>
					break;
 80002ca:	bf00      	nop
				}
				break;
 80002cc:	e065      	b.n	800039a <main+0x1c6>

			case (2):
				delay();
 80002ce:	f000 f8af 	bl	8000430 <delay>
				switch (row_checker)
 80002d2:	7ffb      	ldrb	r3, [r7, #31]
 80002d4:	3b01      	subs	r3, #1
 80002d6:	2b03      	cmp	r3, #3
 80002d8:	d861      	bhi.n	800039e <main+0x1ca>
 80002da:	a201      	add	r2, pc, #4	@ (adr r2, 80002e0 <main+0x10c>)
 80002dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80002e0:	080002f1 	.word	0x080002f1
 80002e4:	080002f9 	.word	0x080002f9
 80002e8:	08000301 	.word	0x08000301
 80002ec:	08000309 	.word	0x08000309
				{
				case (1):
					printf("2\n");
 80002f0:	4843      	ldr	r0, [pc, #268]	@ (8000400 <main+0x22c>)
 80002f2:	f000 fa29 	bl	8000748 <puts>
					break;
 80002f6:	e00b      	b.n	8000310 <main+0x13c>
				case (2):
					printf("5\n");
 80002f8:	4842      	ldr	r0, [pc, #264]	@ (8000404 <main+0x230>)
 80002fa:	f000 fa25 	bl	8000748 <puts>
					break;
 80002fe:	e007      	b.n	8000310 <main+0x13c>
				case (3):
					printf("8\n");
 8000300:	4841      	ldr	r0, [pc, #260]	@ (8000408 <main+0x234>)
 8000302:	f000 fa21 	bl	8000748 <puts>
					break;
 8000306:	e003      	b.n	8000310 <main+0x13c>
				case (4):
					printf("0\n");
 8000308:	4840      	ldr	r0, [pc, #256]	@ (800040c <main+0x238>)
 800030a:	f000 fa1d 	bl	8000748 <puts>
					break;
 800030e:	bf00      	nop
				}
				break;
 8000310:	e045      	b.n	800039e <main+0x1ca>

			case (4):
				delay();
 8000312:	f000 f88d 	bl	8000430 <delay>
				switch (row_checker)
 8000316:	7ffb      	ldrb	r3, [r7, #31]
 8000318:	3b01      	subs	r3, #1
 800031a:	2b03      	cmp	r3, #3
 800031c:	d841      	bhi.n	80003a2 <main+0x1ce>
 800031e:	a201      	add	r2, pc, #4	@ (adr r2, 8000324 <main+0x150>)
 8000320:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000324:	08000335 	.word	0x08000335
 8000328:	0800033d 	.word	0x0800033d
 800032c:	08000345 	.word	0x08000345
 8000330:	0800034d 	.word	0x0800034d
				{
				case (1):
					printf("3\n");
 8000334:	4836      	ldr	r0, [pc, #216]	@ (8000410 <main+0x23c>)
 8000336:	f000 fa07 	bl	8000748 <puts>
					break;
 800033a:	e00b      	b.n	8000354 <main+0x180>
				case (2):
					printf("6\n");
 800033c:	4835      	ldr	r0, [pc, #212]	@ (8000414 <main+0x240>)
 800033e:	f000 fa03 	bl	8000748 <puts>
					break;
 8000342:	e007      	b.n	8000354 <main+0x180>
				case (3):
					printf("9\n");
 8000344:	4834      	ldr	r0, [pc, #208]	@ (8000418 <main+0x244>)
 8000346:	f000 f9ff 	bl	8000748 <puts>
					break;
 800034a:	e003      	b.n	8000354 <main+0x180>
				case (4):
					printf("#\n");
 800034c:	4833      	ldr	r0, [pc, #204]	@ (800041c <main+0x248>)
 800034e:	f000 f9fb 	bl	8000748 <puts>
					break;
 8000352:	bf00      	nop
				}
				break;
 8000354:	e025      	b.n	80003a2 <main+0x1ce>

			case (8):
				delay();
 8000356:	f000 f86b 	bl	8000430 <delay>
				switch (row_checker)
 800035a:	7ffb      	ldrb	r3, [r7, #31]
 800035c:	3b01      	subs	r3, #1
 800035e:	2b03      	cmp	r3, #3
 8000360:	d821      	bhi.n	80003a6 <main+0x1d2>
 8000362:	a201      	add	r2, pc, #4	@ (adr r2, 8000368 <main+0x194>)
 8000364:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000368:	08000379 	.word	0x08000379
 800036c:	08000381 	.word	0x08000381
 8000370:	08000389 	.word	0x08000389
 8000374:	08000391 	.word	0x08000391
				{
				case (1):
					printf("A\n");
 8000378:	4829      	ldr	r0, [pc, #164]	@ (8000420 <main+0x24c>)
 800037a:	f000 f9e5 	bl	8000748 <puts>
					break;
 800037e:	e00b      	b.n	8000398 <main+0x1c4>
				case (2):
					printf("B\n");
 8000380:	4828      	ldr	r0, [pc, #160]	@ (8000424 <main+0x250>)
 8000382:	f000 f9e1 	bl	8000748 <puts>
					break;
 8000386:	e007      	b.n	8000398 <main+0x1c4>
				case (3):
					printf("C\n");
 8000388:	4827      	ldr	r0, [pc, #156]	@ (8000428 <main+0x254>)
 800038a:	f000 f9dd 	bl	8000748 <puts>
					break;
 800038e:	e003      	b.n	8000398 <main+0x1c4>
				case (4):
					printf("D\n");
 8000390:	4826      	ldr	r0, [pc, #152]	@ (800042c <main+0x258>)
 8000392:	f000 f9d9 	bl	8000748 <puts>
					break;
 8000396:	bf00      	nop
				}
				break;
 8000398:	e005      	b.n	80003a6 <main+0x1d2>
				break;
 800039a:	bf00      	nop
 800039c:	e004      	b.n	80003a8 <main+0x1d4>
				break;
 800039e:	bf00      	nop
 80003a0:	e002      	b.n	80003a8 <main+0x1d4>
				break;
 80003a2:	bf00      	nop
 80003a4:	e000      	b.n	80003a8 <main+0x1d4>
				break;
 80003a6:	bf00      	nop
			}

			if (row_checker < 4)
 80003a8:	7ffb      	ldrb	r3, [r7, #31]
 80003aa:	2b03      	cmp	r3, #3
 80003ac:	d809      	bhi.n	80003c2 <main+0x1ee>
				*gpioa_output ^= (0x3 << (row_checker + 3));
 80003ae:	68fb      	ldr	r3, [r7, #12]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	7ffa      	ldrb	r2, [r7, #31]
 80003b4:	3203      	adds	r2, #3
 80003b6:	2103      	movs	r1, #3
 80003b8:	fa01 f202 	lsl.w	r2, r1, r2
 80003bc:	405a      	eors	r2, r3
 80003be:	68fb      	ldr	r3, [r7, #12]
 80003c0:	601a      	str	r2, [r3, #0]
		for (uint8_t row_checker = 1; row_checker < 5; ++row_checker)
 80003c2:	7ffb      	ldrb	r3, [r7, #31]
 80003c4:	3301      	adds	r3, #1
 80003c6:	77fb      	strb	r3, [r7, #31]
 80003c8:	7ffb      	ldrb	r3, [r7, #31]
 80003ca:	2b04      	cmp	r3, #4
 80003cc:	f67f af39 	bls.w	8000242 <main+0x6e>
		}
		*gpioa_output ^= (0x9 << 4);
 80003d0:	68fb      	ldr	r3, [r7, #12]
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	f083 0290 	eor.w	r2, r3, #144	@ 0x90
 80003d8:	68fb      	ldr	r3, [r7, #12]
 80003da:	601a      	str	r2, [r3, #0]
		for (uint8_t row_checker = 1; row_checker < 5; ++row_checker)
 80003dc:	e72e      	b.n	800023c <main+0x68>
 80003de:	bf00      	nop
 80003e0:	4002104c 	.word	0x4002104c
 80003e4:	48000010 	.word	0x48000010
 80003e8:	48000014 	.word	0x48000014
 80003ec:	4800000c 	.word	0x4800000c
 80003f0:	080013b8 	.word	0x080013b8
 80003f4:	080013bc 	.word	0x080013bc
 80003f8:	080013c0 	.word	0x080013c0
 80003fc:	080013c4 	.word	0x080013c4
 8000400:	080013c8 	.word	0x080013c8
 8000404:	080013cc 	.word	0x080013cc
 8000408:	080013d0 	.word	0x080013d0
 800040c:	080013d4 	.word	0x080013d4
 8000410:	080013d8 	.word	0x080013d8
 8000414:	080013dc 	.word	0x080013dc
 8000418:	080013e0 	.word	0x080013e0
 800041c:	080013e4 	.word	0x080013e4
 8000420:	080013e8 	.word	0x080013e8
 8000424:	080013ec 	.word	0x080013ec
 8000428:	080013f0 	.word	0x080013f0
 800042c:	080013f4 	.word	0x080013f4

08000430 <delay>:
	}
}

void delay(void)
{
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 50000; ++i);
 8000436:	2300      	movs	r3, #0
 8000438:	607b      	str	r3, [r7, #4]
 800043a:	e002      	b.n	8000442 <delay+0x12>
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	3301      	adds	r3, #1
 8000440:	607b      	str	r3, [r7, #4]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 8000448:	4293      	cmp	r3, r2
 800044a:	d9f7      	bls.n	800043c <delay+0xc>
}
 800044c:	bf00      	nop
 800044e:	bf00      	nop
 8000450:	370c      	adds	r7, #12
 8000452:	46bd      	mov	sp, r7
 8000454:	bc80      	pop	{r7}
 8000456:	4770      	bx	lr

08000458 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000458:	b580      	push	{r7, lr}
 800045a:	b086      	sub	sp, #24
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000460:	4a14      	ldr	r2, [pc, #80]	@ (80004b4 <_sbrk+0x5c>)
 8000462:	4b15      	ldr	r3, [pc, #84]	@ (80004b8 <_sbrk+0x60>)
 8000464:	1ad3      	subs	r3, r2, r3
 8000466:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000468:	697b      	ldr	r3, [r7, #20]
 800046a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800046c:	4b13      	ldr	r3, [pc, #76]	@ (80004bc <_sbrk+0x64>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	2b00      	cmp	r3, #0
 8000472:	d102      	bne.n	800047a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000474:	4b11      	ldr	r3, [pc, #68]	@ (80004bc <_sbrk+0x64>)
 8000476:	4a12      	ldr	r2, [pc, #72]	@ (80004c0 <_sbrk+0x68>)
 8000478:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800047a:	4b10      	ldr	r3, [pc, #64]	@ (80004bc <_sbrk+0x64>)
 800047c:	681a      	ldr	r2, [r3, #0]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4413      	add	r3, r2
 8000482:	693a      	ldr	r2, [r7, #16]
 8000484:	429a      	cmp	r2, r3
 8000486:	d207      	bcs.n	8000498 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000488:	f000 fa8c 	bl	80009a4 <__errno>
 800048c:	4603      	mov	r3, r0
 800048e:	220c      	movs	r2, #12
 8000490:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000492:	f04f 33ff 	mov.w	r3, #4294967295
 8000496:	e009      	b.n	80004ac <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000498:	4b08      	ldr	r3, [pc, #32]	@ (80004bc <_sbrk+0x64>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800049e:	4b07      	ldr	r3, [pc, #28]	@ (80004bc <_sbrk+0x64>)
 80004a0:	681a      	ldr	r2, [r3, #0]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	4413      	add	r3, r2
 80004a6:	4a05      	ldr	r2, [pc, #20]	@ (80004bc <_sbrk+0x64>)
 80004a8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004aa:	68fb      	ldr	r3, [r7, #12]
}
 80004ac:	4618      	mov	r0, r3
 80004ae:	3718      	adds	r7, #24
 80004b0:	46bd      	mov	sp, r7
 80004b2:	bd80      	pop	{r7, pc}
 80004b4:	20010000 	.word	0x20010000
 80004b8:	00000400 	.word	0x00000400
 80004bc:	20000080 	.word	0x20000080
 80004c0:	20000280 	.word	0x20000280

080004c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004c4:	480d      	ldr	r0, [pc, #52]	@ (80004fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004cc:	480c      	ldr	r0, [pc, #48]	@ (8000500 <LoopForever+0x6>)
  ldr r1, =_edata
 80004ce:	490d      	ldr	r1, [pc, #52]	@ (8000504 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d0:	4a0d      	ldr	r2, [pc, #52]	@ (8000508 <LoopForever+0xe>)
  movs r3, #0
 80004d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004d4:	e002      	b.n	80004dc <LoopCopyDataInit>

080004d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004da:	3304      	adds	r3, #4

080004dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e0:	d3f9      	bcc.n	80004d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004e2:	4a0a      	ldr	r2, [pc, #40]	@ (800050c <LoopForever+0x12>)
  ldr r4, =_ebss
 80004e4:	4c0a      	ldr	r4, [pc, #40]	@ (8000510 <LoopForever+0x16>)
  movs r3, #0
 80004e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004e8:	e001      	b.n	80004ee <LoopFillZerobss>

080004ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ec:	3204      	adds	r2, #4

080004ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f0:	d3fb      	bcc.n	80004ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004f2:	f000 fa5d 	bl	80009b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004f6:	f7ff fe6d 	bl	80001d4 <main>

080004fa <LoopForever>:

LoopForever:
  b LoopForever
 80004fa:	e7fe      	b.n	80004fa <LoopForever>
  ldr   r0, =_estack
 80004fc:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000500:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000504:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000508:	08001420 	.word	0x08001420
  ldr r2, =_sbss
 800050c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000510:	2000027c 	.word	0x2000027c

08000514 <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000514:	e7fe      	b.n	8000514 <ADC1_IRQHandler>
	...

08000518 <std>:
 8000518:	2300      	movs	r3, #0
 800051a:	b510      	push	{r4, lr}
 800051c:	4604      	mov	r4, r0
 800051e:	e9c0 3300 	strd	r3, r3, [r0]
 8000522:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000526:	6083      	str	r3, [r0, #8]
 8000528:	8181      	strh	r1, [r0, #12]
 800052a:	6643      	str	r3, [r0, #100]	@ 0x64
 800052c:	81c2      	strh	r2, [r0, #14]
 800052e:	6183      	str	r3, [r0, #24]
 8000530:	4619      	mov	r1, r3
 8000532:	2208      	movs	r2, #8
 8000534:	305c      	adds	r0, #92	@ 0x5c
 8000536:	f000 f9e7 	bl	8000908 <memset>
 800053a:	4b0d      	ldr	r3, [pc, #52]	@ (8000570 <std+0x58>)
 800053c:	6263      	str	r3, [r4, #36]	@ 0x24
 800053e:	4b0d      	ldr	r3, [pc, #52]	@ (8000574 <std+0x5c>)
 8000540:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000542:	4b0d      	ldr	r3, [pc, #52]	@ (8000578 <std+0x60>)
 8000544:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000546:	4b0d      	ldr	r3, [pc, #52]	@ (800057c <std+0x64>)
 8000548:	6323      	str	r3, [r4, #48]	@ 0x30
 800054a:	4b0d      	ldr	r3, [pc, #52]	@ (8000580 <std+0x68>)
 800054c:	6224      	str	r4, [r4, #32]
 800054e:	429c      	cmp	r4, r3
 8000550:	d006      	beq.n	8000560 <std+0x48>
 8000552:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000556:	4294      	cmp	r4, r2
 8000558:	d002      	beq.n	8000560 <std+0x48>
 800055a:	33d0      	adds	r3, #208	@ 0xd0
 800055c:	429c      	cmp	r4, r3
 800055e:	d105      	bne.n	800056c <std+0x54>
 8000560:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000568:	f000 ba46 	b.w	80009f8 <__retarget_lock_init_recursive>
 800056c:	bd10      	pop	{r4, pc}
 800056e:	bf00      	nop
 8000570:	08000759 	.word	0x08000759
 8000574:	0800077b 	.word	0x0800077b
 8000578:	080007b3 	.word	0x080007b3
 800057c:	080007d7 	.word	0x080007d7
 8000580:	20000084 	.word	0x20000084

08000584 <stdio_exit_handler>:
 8000584:	4a02      	ldr	r2, [pc, #8]	@ (8000590 <stdio_exit_handler+0xc>)
 8000586:	4903      	ldr	r1, [pc, #12]	@ (8000594 <stdio_exit_handler+0x10>)
 8000588:	4803      	ldr	r0, [pc, #12]	@ (8000598 <stdio_exit_handler+0x14>)
 800058a:	f000 b869 	b.w	8000660 <_fwalk_sglue>
 800058e:	bf00      	nop
 8000590:	20000000 	.word	0x20000000
 8000594:	08000cf1 	.word	0x08000cf1
 8000598:	20000010 	.word	0x20000010

0800059c <cleanup_stdio>:
 800059c:	6841      	ldr	r1, [r0, #4]
 800059e:	4b0c      	ldr	r3, [pc, #48]	@ (80005d0 <cleanup_stdio+0x34>)
 80005a0:	4299      	cmp	r1, r3
 80005a2:	b510      	push	{r4, lr}
 80005a4:	4604      	mov	r4, r0
 80005a6:	d001      	beq.n	80005ac <cleanup_stdio+0x10>
 80005a8:	f000 fba2 	bl	8000cf0 <_fflush_r>
 80005ac:	68a1      	ldr	r1, [r4, #8]
 80005ae:	4b09      	ldr	r3, [pc, #36]	@ (80005d4 <cleanup_stdio+0x38>)
 80005b0:	4299      	cmp	r1, r3
 80005b2:	d002      	beq.n	80005ba <cleanup_stdio+0x1e>
 80005b4:	4620      	mov	r0, r4
 80005b6:	f000 fb9b 	bl	8000cf0 <_fflush_r>
 80005ba:	68e1      	ldr	r1, [r4, #12]
 80005bc:	4b06      	ldr	r3, [pc, #24]	@ (80005d8 <cleanup_stdio+0x3c>)
 80005be:	4299      	cmp	r1, r3
 80005c0:	d004      	beq.n	80005cc <cleanup_stdio+0x30>
 80005c2:	4620      	mov	r0, r4
 80005c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c8:	f000 bb92 	b.w	8000cf0 <_fflush_r>
 80005cc:	bd10      	pop	{r4, pc}
 80005ce:	bf00      	nop
 80005d0:	20000084 	.word	0x20000084
 80005d4:	200000ec 	.word	0x200000ec
 80005d8:	20000154 	.word	0x20000154

080005dc <global_stdio_init.part.0>:
 80005dc:	b510      	push	{r4, lr}
 80005de:	4b0b      	ldr	r3, [pc, #44]	@ (800060c <global_stdio_init.part.0+0x30>)
 80005e0:	4c0b      	ldr	r4, [pc, #44]	@ (8000610 <global_stdio_init.part.0+0x34>)
 80005e2:	4a0c      	ldr	r2, [pc, #48]	@ (8000614 <global_stdio_init.part.0+0x38>)
 80005e4:	601a      	str	r2, [r3, #0]
 80005e6:	4620      	mov	r0, r4
 80005e8:	2200      	movs	r2, #0
 80005ea:	2104      	movs	r1, #4
 80005ec:	f7ff ff94 	bl	8000518 <std>
 80005f0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005f4:	2201      	movs	r2, #1
 80005f6:	2109      	movs	r1, #9
 80005f8:	f7ff ff8e 	bl	8000518 <std>
 80005fc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000600:	2202      	movs	r2, #2
 8000602:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000606:	2112      	movs	r1, #18
 8000608:	f7ff bf86 	b.w	8000518 <std>
 800060c:	200001bc 	.word	0x200001bc
 8000610:	20000084 	.word	0x20000084
 8000614:	08000585 	.word	0x08000585

08000618 <__sfp_lock_acquire>:
 8000618:	4801      	ldr	r0, [pc, #4]	@ (8000620 <__sfp_lock_acquire+0x8>)
 800061a:	f000 b9ee 	b.w	80009fa <__retarget_lock_acquire_recursive>
 800061e:	bf00      	nop
 8000620:	200001c5 	.word	0x200001c5

08000624 <__sfp_lock_release>:
 8000624:	4801      	ldr	r0, [pc, #4]	@ (800062c <__sfp_lock_release+0x8>)
 8000626:	f000 b9e9 	b.w	80009fc <__retarget_lock_release_recursive>
 800062a:	bf00      	nop
 800062c:	200001c5 	.word	0x200001c5

08000630 <__sinit>:
 8000630:	b510      	push	{r4, lr}
 8000632:	4604      	mov	r4, r0
 8000634:	f7ff fff0 	bl	8000618 <__sfp_lock_acquire>
 8000638:	6a23      	ldr	r3, [r4, #32]
 800063a:	b11b      	cbz	r3, 8000644 <__sinit+0x14>
 800063c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000640:	f7ff bff0 	b.w	8000624 <__sfp_lock_release>
 8000644:	4b04      	ldr	r3, [pc, #16]	@ (8000658 <__sinit+0x28>)
 8000646:	6223      	str	r3, [r4, #32]
 8000648:	4b04      	ldr	r3, [pc, #16]	@ (800065c <__sinit+0x2c>)
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	2b00      	cmp	r3, #0
 800064e:	d1f5      	bne.n	800063c <__sinit+0xc>
 8000650:	f7ff ffc4 	bl	80005dc <global_stdio_init.part.0>
 8000654:	e7f2      	b.n	800063c <__sinit+0xc>
 8000656:	bf00      	nop
 8000658:	0800059d 	.word	0x0800059d
 800065c:	200001bc 	.word	0x200001bc

08000660 <_fwalk_sglue>:
 8000660:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000664:	4607      	mov	r7, r0
 8000666:	4688      	mov	r8, r1
 8000668:	4614      	mov	r4, r2
 800066a:	2600      	movs	r6, #0
 800066c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000670:	f1b9 0901 	subs.w	r9, r9, #1
 8000674:	d505      	bpl.n	8000682 <_fwalk_sglue+0x22>
 8000676:	6824      	ldr	r4, [r4, #0]
 8000678:	2c00      	cmp	r4, #0
 800067a:	d1f7      	bne.n	800066c <_fwalk_sglue+0xc>
 800067c:	4630      	mov	r0, r6
 800067e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000682:	89ab      	ldrh	r3, [r5, #12]
 8000684:	2b01      	cmp	r3, #1
 8000686:	d907      	bls.n	8000698 <_fwalk_sglue+0x38>
 8000688:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800068c:	3301      	adds	r3, #1
 800068e:	d003      	beq.n	8000698 <_fwalk_sglue+0x38>
 8000690:	4629      	mov	r1, r5
 8000692:	4638      	mov	r0, r7
 8000694:	47c0      	blx	r8
 8000696:	4306      	orrs	r6, r0
 8000698:	3568      	adds	r5, #104	@ 0x68
 800069a:	e7e9      	b.n	8000670 <_fwalk_sglue+0x10>

0800069c <_puts_r>:
 800069c:	6a03      	ldr	r3, [r0, #32]
 800069e:	b570      	push	{r4, r5, r6, lr}
 80006a0:	6884      	ldr	r4, [r0, #8]
 80006a2:	4605      	mov	r5, r0
 80006a4:	460e      	mov	r6, r1
 80006a6:	b90b      	cbnz	r3, 80006ac <_puts_r+0x10>
 80006a8:	f7ff ffc2 	bl	8000630 <__sinit>
 80006ac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80006ae:	07db      	lsls	r3, r3, #31
 80006b0:	d405      	bmi.n	80006be <_puts_r+0x22>
 80006b2:	89a3      	ldrh	r3, [r4, #12]
 80006b4:	0598      	lsls	r0, r3, #22
 80006b6:	d402      	bmi.n	80006be <_puts_r+0x22>
 80006b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80006ba:	f000 f99e 	bl	80009fa <__retarget_lock_acquire_recursive>
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	0719      	lsls	r1, r3, #28
 80006c2:	d502      	bpl.n	80006ca <_puts_r+0x2e>
 80006c4:	6923      	ldr	r3, [r4, #16]
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	d135      	bne.n	8000736 <_puts_r+0x9a>
 80006ca:	4621      	mov	r1, r4
 80006cc:	4628      	mov	r0, r5
 80006ce:	f000 f8c5 	bl	800085c <__swsetup_r>
 80006d2:	b380      	cbz	r0, 8000736 <_puts_r+0x9a>
 80006d4:	f04f 35ff 	mov.w	r5, #4294967295
 80006d8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80006da:	07da      	lsls	r2, r3, #31
 80006dc:	d405      	bmi.n	80006ea <_puts_r+0x4e>
 80006de:	89a3      	ldrh	r3, [r4, #12]
 80006e0:	059b      	lsls	r3, r3, #22
 80006e2:	d402      	bmi.n	80006ea <_puts_r+0x4e>
 80006e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80006e6:	f000 f989 	bl	80009fc <__retarget_lock_release_recursive>
 80006ea:	4628      	mov	r0, r5
 80006ec:	bd70      	pop	{r4, r5, r6, pc}
 80006ee:	2b00      	cmp	r3, #0
 80006f0:	da04      	bge.n	80006fc <_puts_r+0x60>
 80006f2:	69a2      	ldr	r2, [r4, #24]
 80006f4:	429a      	cmp	r2, r3
 80006f6:	dc17      	bgt.n	8000728 <_puts_r+0x8c>
 80006f8:	290a      	cmp	r1, #10
 80006fa:	d015      	beq.n	8000728 <_puts_r+0x8c>
 80006fc:	6823      	ldr	r3, [r4, #0]
 80006fe:	1c5a      	adds	r2, r3, #1
 8000700:	6022      	str	r2, [r4, #0]
 8000702:	7019      	strb	r1, [r3, #0]
 8000704:	68a3      	ldr	r3, [r4, #8]
 8000706:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800070a:	3b01      	subs	r3, #1
 800070c:	60a3      	str	r3, [r4, #8]
 800070e:	2900      	cmp	r1, #0
 8000710:	d1ed      	bne.n	80006ee <_puts_r+0x52>
 8000712:	2b00      	cmp	r3, #0
 8000714:	da11      	bge.n	800073a <_puts_r+0x9e>
 8000716:	4622      	mov	r2, r4
 8000718:	210a      	movs	r1, #10
 800071a:	4628      	mov	r0, r5
 800071c:	f000 f85f 	bl	80007de <__swbuf_r>
 8000720:	3001      	adds	r0, #1
 8000722:	d0d7      	beq.n	80006d4 <_puts_r+0x38>
 8000724:	250a      	movs	r5, #10
 8000726:	e7d7      	b.n	80006d8 <_puts_r+0x3c>
 8000728:	4622      	mov	r2, r4
 800072a:	4628      	mov	r0, r5
 800072c:	f000 f857 	bl	80007de <__swbuf_r>
 8000730:	3001      	adds	r0, #1
 8000732:	d1e7      	bne.n	8000704 <_puts_r+0x68>
 8000734:	e7ce      	b.n	80006d4 <_puts_r+0x38>
 8000736:	3e01      	subs	r6, #1
 8000738:	e7e4      	b.n	8000704 <_puts_r+0x68>
 800073a:	6823      	ldr	r3, [r4, #0]
 800073c:	1c5a      	adds	r2, r3, #1
 800073e:	6022      	str	r2, [r4, #0]
 8000740:	220a      	movs	r2, #10
 8000742:	701a      	strb	r2, [r3, #0]
 8000744:	e7ee      	b.n	8000724 <_puts_r+0x88>
	...

08000748 <puts>:
 8000748:	4b02      	ldr	r3, [pc, #8]	@ (8000754 <puts+0xc>)
 800074a:	4601      	mov	r1, r0
 800074c:	6818      	ldr	r0, [r3, #0]
 800074e:	f7ff bfa5 	b.w	800069c <_puts_r>
 8000752:	bf00      	nop
 8000754:	2000000c 	.word	0x2000000c

08000758 <__sread>:
 8000758:	b510      	push	{r4, lr}
 800075a:	460c      	mov	r4, r1
 800075c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000760:	f000 f8fc 	bl	800095c <_read_r>
 8000764:	2800      	cmp	r0, #0
 8000766:	bfab      	itete	ge
 8000768:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800076a:	89a3      	ldrhlt	r3, [r4, #12]
 800076c:	181b      	addge	r3, r3, r0
 800076e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000772:	bfac      	ite	ge
 8000774:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000776:	81a3      	strhlt	r3, [r4, #12]
 8000778:	bd10      	pop	{r4, pc}

0800077a <__swrite>:
 800077a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800077e:	461f      	mov	r7, r3
 8000780:	898b      	ldrh	r3, [r1, #12]
 8000782:	05db      	lsls	r3, r3, #23
 8000784:	4605      	mov	r5, r0
 8000786:	460c      	mov	r4, r1
 8000788:	4616      	mov	r6, r2
 800078a:	d505      	bpl.n	8000798 <__swrite+0x1e>
 800078c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000790:	2302      	movs	r3, #2
 8000792:	2200      	movs	r2, #0
 8000794:	f000 f8d0 	bl	8000938 <_lseek_r>
 8000798:	89a3      	ldrh	r3, [r4, #12]
 800079a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800079e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80007a2:	81a3      	strh	r3, [r4, #12]
 80007a4:	4632      	mov	r2, r6
 80007a6:	463b      	mov	r3, r7
 80007a8:	4628      	mov	r0, r5
 80007aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80007ae:	f000 b8e7 	b.w	8000980 <_write_r>

080007b2 <__sseek>:
 80007b2:	b510      	push	{r4, lr}
 80007b4:	460c      	mov	r4, r1
 80007b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007ba:	f000 f8bd 	bl	8000938 <_lseek_r>
 80007be:	1c43      	adds	r3, r0, #1
 80007c0:	89a3      	ldrh	r3, [r4, #12]
 80007c2:	bf15      	itete	ne
 80007c4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80007c6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80007ca:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80007ce:	81a3      	strheq	r3, [r4, #12]
 80007d0:	bf18      	it	ne
 80007d2:	81a3      	strhne	r3, [r4, #12]
 80007d4:	bd10      	pop	{r4, pc}

080007d6 <__sclose>:
 80007d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007da:	f000 b89d 	b.w	8000918 <_close_r>

080007de <__swbuf_r>:
 80007de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007e0:	460e      	mov	r6, r1
 80007e2:	4614      	mov	r4, r2
 80007e4:	4605      	mov	r5, r0
 80007e6:	b118      	cbz	r0, 80007f0 <__swbuf_r+0x12>
 80007e8:	6a03      	ldr	r3, [r0, #32]
 80007ea:	b90b      	cbnz	r3, 80007f0 <__swbuf_r+0x12>
 80007ec:	f7ff ff20 	bl	8000630 <__sinit>
 80007f0:	69a3      	ldr	r3, [r4, #24]
 80007f2:	60a3      	str	r3, [r4, #8]
 80007f4:	89a3      	ldrh	r3, [r4, #12]
 80007f6:	071a      	lsls	r2, r3, #28
 80007f8:	d501      	bpl.n	80007fe <__swbuf_r+0x20>
 80007fa:	6923      	ldr	r3, [r4, #16]
 80007fc:	b943      	cbnz	r3, 8000810 <__swbuf_r+0x32>
 80007fe:	4621      	mov	r1, r4
 8000800:	4628      	mov	r0, r5
 8000802:	f000 f82b 	bl	800085c <__swsetup_r>
 8000806:	b118      	cbz	r0, 8000810 <__swbuf_r+0x32>
 8000808:	f04f 37ff 	mov.w	r7, #4294967295
 800080c:	4638      	mov	r0, r7
 800080e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000810:	6823      	ldr	r3, [r4, #0]
 8000812:	6922      	ldr	r2, [r4, #16]
 8000814:	1a98      	subs	r0, r3, r2
 8000816:	6963      	ldr	r3, [r4, #20]
 8000818:	b2f6      	uxtb	r6, r6
 800081a:	4283      	cmp	r3, r0
 800081c:	4637      	mov	r7, r6
 800081e:	dc05      	bgt.n	800082c <__swbuf_r+0x4e>
 8000820:	4621      	mov	r1, r4
 8000822:	4628      	mov	r0, r5
 8000824:	f000 fa64 	bl	8000cf0 <_fflush_r>
 8000828:	2800      	cmp	r0, #0
 800082a:	d1ed      	bne.n	8000808 <__swbuf_r+0x2a>
 800082c:	68a3      	ldr	r3, [r4, #8]
 800082e:	3b01      	subs	r3, #1
 8000830:	60a3      	str	r3, [r4, #8]
 8000832:	6823      	ldr	r3, [r4, #0]
 8000834:	1c5a      	adds	r2, r3, #1
 8000836:	6022      	str	r2, [r4, #0]
 8000838:	701e      	strb	r6, [r3, #0]
 800083a:	6962      	ldr	r2, [r4, #20]
 800083c:	1c43      	adds	r3, r0, #1
 800083e:	429a      	cmp	r2, r3
 8000840:	d004      	beq.n	800084c <__swbuf_r+0x6e>
 8000842:	89a3      	ldrh	r3, [r4, #12]
 8000844:	07db      	lsls	r3, r3, #31
 8000846:	d5e1      	bpl.n	800080c <__swbuf_r+0x2e>
 8000848:	2e0a      	cmp	r6, #10
 800084a:	d1df      	bne.n	800080c <__swbuf_r+0x2e>
 800084c:	4621      	mov	r1, r4
 800084e:	4628      	mov	r0, r5
 8000850:	f000 fa4e 	bl	8000cf0 <_fflush_r>
 8000854:	2800      	cmp	r0, #0
 8000856:	d0d9      	beq.n	800080c <__swbuf_r+0x2e>
 8000858:	e7d6      	b.n	8000808 <__swbuf_r+0x2a>
	...

0800085c <__swsetup_r>:
 800085c:	b538      	push	{r3, r4, r5, lr}
 800085e:	4b29      	ldr	r3, [pc, #164]	@ (8000904 <__swsetup_r+0xa8>)
 8000860:	4605      	mov	r5, r0
 8000862:	6818      	ldr	r0, [r3, #0]
 8000864:	460c      	mov	r4, r1
 8000866:	b118      	cbz	r0, 8000870 <__swsetup_r+0x14>
 8000868:	6a03      	ldr	r3, [r0, #32]
 800086a:	b90b      	cbnz	r3, 8000870 <__swsetup_r+0x14>
 800086c:	f7ff fee0 	bl	8000630 <__sinit>
 8000870:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000874:	0719      	lsls	r1, r3, #28
 8000876:	d422      	bmi.n	80008be <__swsetup_r+0x62>
 8000878:	06da      	lsls	r2, r3, #27
 800087a:	d407      	bmi.n	800088c <__swsetup_r+0x30>
 800087c:	2209      	movs	r2, #9
 800087e:	602a      	str	r2, [r5, #0]
 8000880:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000884:	81a3      	strh	r3, [r4, #12]
 8000886:	f04f 30ff 	mov.w	r0, #4294967295
 800088a:	e033      	b.n	80008f4 <__swsetup_r+0x98>
 800088c:	0758      	lsls	r0, r3, #29
 800088e:	d512      	bpl.n	80008b6 <__swsetup_r+0x5a>
 8000890:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000892:	b141      	cbz	r1, 80008a6 <__swsetup_r+0x4a>
 8000894:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000898:	4299      	cmp	r1, r3
 800089a:	d002      	beq.n	80008a2 <__swsetup_r+0x46>
 800089c:	4628      	mov	r0, r5
 800089e:	f000 f8af 	bl	8000a00 <_free_r>
 80008a2:	2300      	movs	r3, #0
 80008a4:	6363      	str	r3, [r4, #52]	@ 0x34
 80008a6:	89a3      	ldrh	r3, [r4, #12]
 80008a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80008ac:	81a3      	strh	r3, [r4, #12]
 80008ae:	2300      	movs	r3, #0
 80008b0:	6063      	str	r3, [r4, #4]
 80008b2:	6923      	ldr	r3, [r4, #16]
 80008b4:	6023      	str	r3, [r4, #0]
 80008b6:	89a3      	ldrh	r3, [r4, #12]
 80008b8:	f043 0308 	orr.w	r3, r3, #8
 80008bc:	81a3      	strh	r3, [r4, #12]
 80008be:	6923      	ldr	r3, [r4, #16]
 80008c0:	b94b      	cbnz	r3, 80008d6 <__swsetup_r+0x7a>
 80008c2:	89a3      	ldrh	r3, [r4, #12]
 80008c4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80008c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80008cc:	d003      	beq.n	80008d6 <__swsetup_r+0x7a>
 80008ce:	4621      	mov	r1, r4
 80008d0:	4628      	mov	r0, r5
 80008d2:	f000 fa5b 	bl	8000d8c <__smakebuf_r>
 80008d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008da:	f013 0201 	ands.w	r2, r3, #1
 80008de:	d00a      	beq.n	80008f6 <__swsetup_r+0x9a>
 80008e0:	2200      	movs	r2, #0
 80008e2:	60a2      	str	r2, [r4, #8]
 80008e4:	6962      	ldr	r2, [r4, #20]
 80008e6:	4252      	negs	r2, r2
 80008e8:	61a2      	str	r2, [r4, #24]
 80008ea:	6922      	ldr	r2, [r4, #16]
 80008ec:	b942      	cbnz	r2, 8000900 <__swsetup_r+0xa4>
 80008ee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80008f2:	d1c5      	bne.n	8000880 <__swsetup_r+0x24>
 80008f4:	bd38      	pop	{r3, r4, r5, pc}
 80008f6:	0799      	lsls	r1, r3, #30
 80008f8:	bf58      	it	pl
 80008fa:	6962      	ldrpl	r2, [r4, #20]
 80008fc:	60a2      	str	r2, [r4, #8]
 80008fe:	e7f4      	b.n	80008ea <__swsetup_r+0x8e>
 8000900:	2000      	movs	r0, #0
 8000902:	e7f7      	b.n	80008f4 <__swsetup_r+0x98>
 8000904:	2000000c 	.word	0x2000000c

08000908 <memset>:
 8000908:	4402      	add	r2, r0
 800090a:	4603      	mov	r3, r0
 800090c:	4293      	cmp	r3, r2
 800090e:	d100      	bne.n	8000912 <memset+0xa>
 8000910:	4770      	bx	lr
 8000912:	f803 1b01 	strb.w	r1, [r3], #1
 8000916:	e7f9      	b.n	800090c <memset+0x4>

08000918 <_close_r>:
 8000918:	b538      	push	{r3, r4, r5, lr}
 800091a:	4d06      	ldr	r5, [pc, #24]	@ (8000934 <_close_r+0x1c>)
 800091c:	2300      	movs	r3, #0
 800091e:	4604      	mov	r4, r0
 8000920:	4608      	mov	r0, r1
 8000922:	602b      	str	r3, [r5, #0]
 8000924:	f000 fb72 	bl	800100c <_close>
 8000928:	1c43      	adds	r3, r0, #1
 800092a:	d102      	bne.n	8000932 <_close_r+0x1a>
 800092c:	682b      	ldr	r3, [r5, #0]
 800092e:	b103      	cbz	r3, 8000932 <_close_r+0x1a>
 8000930:	6023      	str	r3, [r4, #0]
 8000932:	bd38      	pop	{r3, r4, r5, pc}
 8000934:	200001c0 	.word	0x200001c0

08000938 <_lseek_r>:
 8000938:	b538      	push	{r3, r4, r5, lr}
 800093a:	4d07      	ldr	r5, [pc, #28]	@ (8000958 <_lseek_r+0x20>)
 800093c:	4604      	mov	r4, r0
 800093e:	4608      	mov	r0, r1
 8000940:	4611      	mov	r1, r2
 8000942:	2200      	movs	r2, #0
 8000944:	602a      	str	r2, [r5, #0]
 8000946:	461a      	mov	r2, r3
 8000948:	f000 fb21 	bl	8000f8e <_lseek>
 800094c:	1c43      	adds	r3, r0, #1
 800094e:	d102      	bne.n	8000956 <_lseek_r+0x1e>
 8000950:	682b      	ldr	r3, [r5, #0]
 8000952:	b103      	cbz	r3, 8000956 <_lseek_r+0x1e>
 8000954:	6023      	str	r3, [r4, #0]
 8000956:	bd38      	pop	{r3, r4, r5, pc}
 8000958:	200001c0 	.word	0x200001c0

0800095c <_read_r>:
 800095c:	b538      	push	{r3, r4, r5, lr}
 800095e:	4d07      	ldr	r5, [pc, #28]	@ (800097c <_read_r+0x20>)
 8000960:	4604      	mov	r4, r0
 8000962:	4608      	mov	r0, r1
 8000964:	4611      	mov	r1, r2
 8000966:	2200      	movs	r2, #0
 8000968:	602a      	str	r2, [r5, #0]
 800096a:	461a      	mov	r2, r3
 800096c:	f000 fab9 	bl	8000ee2 <_read>
 8000970:	1c43      	adds	r3, r0, #1
 8000972:	d102      	bne.n	800097a <_read_r+0x1e>
 8000974:	682b      	ldr	r3, [r5, #0]
 8000976:	b103      	cbz	r3, 800097a <_read_r+0x1e>
 8000978:	6023      	str	r3, [r4, #0]
 800097a:	bd38      	pop	{r3, r4, r5, pc}
 800097c:	200001c0 	.word	0x200001c0

08000980 <_write_r>:
 8000980:	b538      	push	{r3, r4, r5, lr}
 8000982:	4d07      	ldr	r5, [pc, #28]	@ (80009a0 <_write_r+0x20>)
 8000984:	4604      	mov	r4, r0
 8000986:	4608      	mov	r0, r1
 8000988:	4611      	mov	r1, r2
 800098a:	2200      	movs	r2, #0
 800098c:	602a      	str	r2, [r5, #0]
 800098e:	461a      	mov	r2, r3
 8000990:	f000 fb0f 	bl	8000fb2 <_write>
 8000994:	1c43      	adds	r3, r0, #1
 8000996:	d102      	bne.n	800099e <_write_r+0x1e>
 8000998:	682b      	ldr	r3, [r5, #0]
 800099a:	b103      	cbz	r3, 800099e <_write_r+0x1e>
 800099c:	6023      	str	r3, [r4, #0]
 800099e:	bd38      	pop	{r3, r4, r5, pc}
 80009a0:	200001c0 	.word	0x200001c0

080009a4 <__errno>:
 80009a4:	4b01      	ldr	r3, [pc, #4]	@ (80009ac <__errno+0x8>)
 80009a6:	6818      	ldr	r0, [r3, #0]
 80009a8:	4770      	bx	lr
 80009aa:	bf00      	nop
 80009ac:	2000000c 	.word	0x2000000c

080009b0 <__libc_init_array>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	4d0d      	ldr	r5, [pc, #52]	@ (80009e8 <__libc_init_array+0x38>)
 80009b4:	4c0d      	ldr	r4, [pc, #52]	@ (80009ec <__libc_init_array+0x3c>)
 80009b6:	1b64      	subs	r4, r4, r5
 80009b8:	10a4      	asrs	r4, r4, #2
 80009ba:	2600      	movs	r6, #0
 80009bc:	42a6      	cmp	r6, r4
 80009be:	d109      	bne.n	80009d4 <__libc_init_array+0x24>
 80009c0:	4d0b      	ldr	r5, [pc, #44]	@ (80009f0 <__libc_init_array+0x40>)
 80009c2:	4c0c      	ldr	r4, [pc, #48]	@ (80009f4 <__libc_init_array+0x44>)
 80009c4:	f000 fcec 	bl	80013a0 <_init>
 80009c8:	1b64      	subs	r4, r4, r5
 80009ca:	10a4      	asrs	r4, r4, #2
 80009cc:	2600      	movs	r6, #0
 80009ce:	42a6      	cmp	r6, r4
 80009d0:	d105      	bne.n	80009de <__libc_init_array+0x2e>
 80009d2:	bd70      	pop	{r4, r5, r6, pc}
 80009d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80009d8:	4798      	blx	r3
 80009da:	3601      	adds	r6, #1
 80009dc:	e7ee      	b.n	80009bc <__libc_init_array+0xc>
 80009de:	f855 3b04 	ldr.w	r3, [r5], #4
 80009e2:	4798      	blx	r3
 80009e4:	3601      	adds	r6, #1
 80009e6:	e7f2      	b.n	80009ce <__libc_init_array+0x1e>
 80009e8:	08001418 	.word	0x08001418
 80009ec:	08001418 	.word	0x08001418
 80009f0:	08001418 	.word	0x08001418
 80009f4:	0800141c 	.word	0x0800141c

080009f8 <__retarget_lock_init_recursive>:
 80009f8:	4770      	bx	lr

080009fa <__retarget_lock_acquire_recursive>:
 80009fa:	4770      	bx	lr

080009fc <__retarget_lock_release_recursive>:
 80009fc:	4770      	bx	lr
	...

08000a00 <_free_r>:
 8000a00:	b538      	push	{r3, r4, r5, lr}
 8000a02:	4605      	mov	r5, r0
 8000a04:	2900      	cmp	r1, #0
 8000a06:	d041      	beq.n	8000a8c <_free_r+0x8c>
 8000a08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a0c:	1f0c      	subs	r4, r1, #4
 8000a0e:	2b00      	cmp	r3, #0
 8000a10:	bfb8      	it	lt
 8000a12:	18e4      	addlt	r4, r4, r3
 8000a14:	f000 f8e0 	bl	8000bd8 <__malloc_lock>
 8000a18:	4a1d      	ldr	r2, [pc, #116]	@ (8000a90 <_free_r+0x90>)
 8000a1a:	6813      	ldr	r3, [r2, #0]
 8000a1c:	b933      	cbnz	r3, 8000a2c <_free_r+0x2c>
 8000a1e:	6063      	str	r3, [r4, #4]
 8000a20:	6014      	str	r4, [r2, #0]
 8000a22:	4628      	mov	r0, r5
 8000a24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a28:	f000 b8dc 	b.w	8000be4 <__malloc_unlock>
 8000a2c:	42a3      	cmp	r3, r4
 8000a2e:	d908      	bls.n	8000a42 <_free_r+0x42>
 8000a30:	6820      	ldr	r0, [r4, #0]
 8000a32:	1821      	adds	r1, r4, r0
 8000a34:	428b      	cmp	r3, r1
 8000a36:	bf01      	itttt	eq
 8000a38:	6819      	ldreq	r1, [r3, #0]
 8000a3a:	685b      	ldreq	r3, [r3, #4]
 8000a3c:	1809      	addeq	r1, r1, r0
 8000a3e:	6021      	streq	r1, [r4, #0]
 8000a40:	e7ed      	b.n	8000a1e <_free_r+0x1e>
 8000a42:	461a      	mov	r2, r3
 8000a44:	685b      	ldr	r3, [r3, #4]
 8000a46:	b10b      	cbz	r3, 8000a4c <_free_r+0x4c>
 8000a48:	42a3      	cmp	r3, r4
 8000a4a:	d9fa      	bls.n	8000a42 <_free_r+0x42>
 8000a4c:	6811      	ldr	r1, [r2, #0]
 8000a4e:	1850      	adds	r0, r2, r1
 8000a50:	42a0      	cmp	r0, r4
 8000a52:	d10b      	bne.n	8000a6c <_free_r+0x6c>
 8000a54:	6820      	ldr	r0, [r4, #0]
 8000a56:	4401      	add	r1, r0
 8000a58:	1850      	adds	r0, r2, r1
 8000a5a:	4283      	cmp	r3, r0
 8000a5c:	6011      	str	r1, [r2, #0]
 8000a5e:	d1e0      	bne.n	8000a22 <_free_r+0x22>
 8000a60:	6818      	ldr	r0, [r3, #0]
 8000a62:	685b      	ldr	r3, [r3, #4]
 8000a64:	6053      	str	r3, [r2, #4]
 8000a66:	4408      	add	r0, r1
 8000a68:	6010      	str	r0, [r2, #0]
 8000a6a:	e7da      	b.n	8000a22 <_free_r+0x22>
 8000a6c:	d902      	bls.n	8000a74 <_free_r+0x74>
 8000a6e:	230c      	movs	r3, #12
 8000a70:	602b      	str	r3, [r5, #0]
 8000a72:	e7d6      	b.n	8000a22 <_free_r+0x22>
 8000a74:	6820      	ldr	r0, [r4, #0]
 8000a76:	1821      	adds	r1, r4, r0
 8000a78:	428b      	cmp	r3, r1
 8000a7a:	bf04      	itt	eq
 8000a7c:	6819      	ldreq	r1, [r3, #0]
 8000a7e:	685b      	ldreq	r3, [r3, #4]
 8000a80:	6063      	str	r3, [r4, #4]
 8000a82:	bf04      	itt	eq
 8000a84:	1809      	addeq	r1, r1, r0
 8000a86:	6021      	streq	r1, [r4, #0]
 8000a88:	6054      	str	r4, [r2, #4]
 8000a8a:	e7ca      	b.n	8000a22 <_free_r+0x22>
 8000a8c:	bd38      	pop	{r3, r4, r5, pc}
 8000a8e:	bf00      	nop
 8000a90:	200001cc 	.word	0x200001cc

08000a94 <sbrk_aligned>:
 8000a94:	b570      	push	{r4, r5, r6, lr}
 8000a96:	4e0f      	ldr	r6, [pc, #60]	@ (8000ad4 <sbrk_aligned+0x40>)
 8000a98:	460c      	mov	r4, r1
 8000a9a:	6831      	ldr	r1, [r6, #0]
 8000a9c:	4605      	mov	r5, r0
 8000a9e:	b911      	cbnz	r1, 8000aa6 <sbrk_aligned+0x12>
 8000aa0:	f000 f9d2 	bl	8000e48 <_sbrk_r>
 8000aa4:	6030      	str	r0, [r6, #0]
 8000aa6:	4621      	mov	r1, r4
 8000aa8:	4628      	mov	r0, r5
 8000aaa:	f000 f9cd 	bl	8000e48 <_sbrk_r>
 8000aae:	1c43      	adds	r3, r0, #1
 8000ab0:	d103      	bne.n	8000aba <sbrk_aligned+0x26>
 8000ab2:	f04f 34ff 	mov.w	r4, #4294967295
 8000ab6:	4620      	mov	r0, r4
 8000ab8:	bd70      	pop	{r4, r5, r6, pc}
 8000aba:	1cc4      	adds	r4, r0, #3
 8000abc:	f024 0403 	bic.w	r4, r4, #3
 8000ac0:	42a0      	cmp	r0, r4
 8000ac2:	d0f8      	beq.n	8000ab6 <sbrk_aligned+0x22>
 8000ac4:	1a21      	subs	r1, r4, r0
 8000ac6:	4628      	mov	r0, r5
 8000ac8:	f000 f9be 	bl	8000e48 <_sbrk_r>
 8000acc:	3001      	adds	r0, #1
 8000ace:	d1f2      	bne.n	8000ab6 <sbrk_aligned+0x22>
 8000ad0:	e7ef      	b.n	8000ab2 <sbrk_aligned+0x1e>
 8000ad2:	bf00      	nop
 8000ad4:	200001c8 	.word	0x200001c8

08000ad8 <_malloc_r>:
 8000ad8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000adc:	1ccd      	adds	r5, r1, #3
 8000ade:	f025 0503 	bic.w	r5, r5, #3
 8000ae2:	3508      	adds	r5, #8
 8000ae4:	2d0c      	cmp	r5, #12
 8000ae6:	bf38      	it	cc
 8000ae8:	250c      	movcc	r5, #12
 8000aea:	2d00      	cmp	r5, #0
 8000aec:	4606      	mov	r6, r0
 8000aee:	db01      	blt.n	8000af4 <_malloc_r+0x1c>
 8000af0:	42a9      	cmp	r1, r5
 8000af2:	d904      	bls.n	8000afe <_malloc_r+0x26>
 8000af4:	230c      	movs	r3, #12
 8000af6:	6033      	str	r3, [r6, #0]
 8000af8:	2000      	movs	r0, #0
 8000afa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000afe:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000bd4 <_malloc_r+0xfc>
 8000b02:	f000 f869 	bl	8000bd8 <__malloc_lock>
 8000b06:	f8d8 3000 	ldr.w	r3, [r8]
 8000b0a:	461c      	mov	r4, r3
 8000b0c:	bb44      	cbnz	r4, 8000b60 <_malloc_r+0x88>
 8000b0e:	4629      	mov	r1, r5
 8000b10:	4630      	mov	r0, r6
 8000b12:	f7ff ffbf 	bl	8000a94 <sbrk_aligned>
 8000b16:	1c43      	adds	r3, r0, #1
 8000b18:	4604      	mov	r4, r0
 8000b1a:	d158      	bne.n	8000bce <_malloc_r+0xf6>
 8000b1c:	f8d8 4000 	ldr.w	r4, [r8]
 8000b20:	4627      	mov	r7, r4
 8000b22:	2f00      	cmp	r7, #0
 8000b24:	d143      	bne.n	8000bae <_malloc_r+0xd6>
 8000b26:	2c00      	cmp	r4, #0
 8000b28:	d04b      	beq.n	8000bc2 <_malloc_r+0xea>
 8000b2a:	6823      	ldr	r3, [r4, #0]
 8000b2c:	4639      	mov	r1, r7
 8000b2e:	4630      	mov	r0, r6
 8000b30:	eb04 0903 	add.w	r9, r4, r3
 8000b34:	f000 f988 	bl	8000e48 <_sbrk_r>
 8000b38:	4581      	cmp	r9, r0
 8000b3a:	d142      	bne.n	8000bc2 <_malloc_r+0xea>
 8000b3c:	6821      	ldr	r1, [r4, #0]
 8000b3e:	1a6d      	subs	r5, r5, r1
 8000b40:	4629      	mov	r1, r5
 8000b42:	4630      	mov	r0, r6
 8000b44:	f7ff ffa6 	bl	8000a94 <sbrk_aligned>
 8000b48:	3001      	adds	r0, #1
 8000b4a:	d03a      	beq.n	8000bc2 <_malloc_r+0xea>
 8000b4c:	6823      	ldr	r3, [r4, #0]
 8000b4e:	442b      	add	r3, r5
 8000b50:	6023      	str	r3, [r4, #0]
 8000b52:	f8d8 3000 	ldr.w	r3, [r8]
 8000b56:	685a      	ldr	r2, [r3, #4]
 8000b58:	bb62      	cbnz	r2, 8000bb4 <_malloc_r+0xdc>
 8000b5a:	f8c8 7000 	str.w	r7, [r8]
 8000b5e:	e00f      	b.n	8000b80 <_malloc_r+0xa8>
 8000b60:	6822      	ldr	r2, [r4, #0]
 8000b62:	1b52      	subs	r2, r2, r5
 8000b64:	d420      	bmi.n	8000ba8 <_malloc_r+0xd0>
 8000b66:	2a0b      	cmp	r2, #11
 8000b68:	d917      	bls.n	8000b9a <_malloc_r+0xc2>
 8000b6a:	1961      	adds	r1, r4, r5
 8000b6c:	42a3      	cmp	r3, r4
 8000b6e:	6025      	str	r5, [r4, #0]
 8000b70:	bf18      	it	ne
 8000b72:	6059      	strne	r1, [r3, #4]
 8000b74:	6863      	ldr	r3, [r4, #4]
 8000b76:	bf08      	it	eq
 8000b78:	f8c8 1000 	streq.w	r1, [r8]
 8000b7c:	5162      	str	r2, [r4, r5]
 8000b7e:	604b      	str	r3, [r1, #4]
 8000b80:	4630      	mov	r0, r6
 8000b82:	f000 f82f 	bl	8000be4 <__malloc_unlock>
 8000b86:	f104 000b 	add.w	r0, r4, #11
 8000b8a:	1d23      	adds	r3, r4, #4
 8000b8c:	f020 0007 	bic.w	r0, r0, #7
 8000b90:	1ac2      	subs	r2, r0, r3
 8000b92:	bf1c      	itt	ne
 8000b94:	1a1b      	subne	r3, r3, r0
 8000b96:	50a3      	strne	r3, [r4, r2]
 8000b98:	e7af      	b.n	8000afa <_malloc_r+0x22>
 8000b9a:	6862      	ldr	r2, [r4, #4]
 8000b9c:	42a3      	cmp	r3, r4
 8000b9e:	bf0c      	ite	eq
 8000ba0:	f8c8 2000 	streq.w	r2, [r8]
 8000ba4:	605a      	strne	r2, [r3, #4]
 8000ba6:	e7eb      	b.n	8000b80 <_malloc_r+0xa8>
 8000ba8:	4623      	mov	r3, r4
 8000baa:	6864      	ldr	r4, [r4, #4]
 8000bac:	e7ae      	b.n	8000b0c <_malloc_r+0x34>
 8000bae:	463c      	mov	r4, r7
 8000bb0:	687f      	ldr	r7, [r7, #4]
 8000bb2:	e7b6      	b.n	8000b22 <_malloc_r+0x4a>
 8000bb4:	461a      	mov	r2, r3
 8000bb6:	685b      	ldr	r3, [r3, #4]
 8000bb8:	42a3      	cmp	r3, r4
 8000bba:	d1fb      	bne.n	8000bb4 <_malloc_r+0xdc>
 8000bbc:	2300      	movs	r3, #0
 8000bbe:	6053      	str	r3, [r2, #4]
 8000bc0:	e7de      	b.n	8000b80 <_malloc_r+0xa8>
 8000bc2:	230c      	movs	r3, #12
 8000bc4:	6033      	str	r3, [r6, #0]
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	f000 f80c 	bl	8000be4 <__malloc_unlock>
 8000bcc:	e794      	b.n	8000af8 <_malloc_r+0x20>
 8000bce:	6005      	str	r5, [r0, #0]
 8000bd0:	e7d6      	b.n	8000b80 <_malloc_r+0xa8>
 8000bd2:	bf00      	nop
 8000bd4:	200001cc 	.word	0x200001cc

08000bd8 <__malloc_lock>:
 8000bd8:	4801      	ldr	r0, [pc, #4]	@ (8000be0 <__malloc_lock+0x8>)
 8000bda:	f7ff bf0e 	b.w	80009fa <__retarget_lock_acquire_recursive>
 8000bde:	bf00      	nop
 8000be0:	200001c4 	.word	0x200001c4

08000be4 <__malloc_unlock>:
 8000be4:	4801      	ldr	r0, [pc, #4]	@ (8000bec <__malloc_unlock+0x8>)
 8000be6:	f7ff bf09 	b.w	80009fc <__retarget_lock_release_recursive>
 8000bea:	bf00      	nop
 8000bec:	200001c4 	.word	0x200001c4

08000bf0 <__sflush_r>:
 8000bf0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bf6:	0716      	lsls	r6, r2, #28
 8000bf8:	4605      	mov	r5, r0
 8000bfa:	460c      	mov	r4, r1
 8000bfc:	d454      	bmi.n	8000ca8 <__sflush_r+0xb8>
 8000bfe:	684b      	ldr	r3, [r1, #4]
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	dc02      	bgt.n	8000c0a <__sflush_r+0x1a>
 8000c04:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	dd48      	ble.n	8000c9c <__sflush_r+0xac>
 8000c0a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000c0c:	2e00      	cmp	r6, #0
 8000c0e:	d045      	beq.n	8000c9c <__sflush_r+0xac>
 8000c10:	2300      	movs	r3, #0
 8000c12:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000c16:	682f      	ldr	r7, [r5, #0]
 8000c18:	6a21      	ldr	r1, [r4, #32]
 8000c1a:	602b      	str	r3, [r5, #0]
 8000c1c:	d030      	beq.n	8000c80 <__sflush_r+0x90>
 8000c1e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000c20:	89a3      	ldrh	r3, [r4, #12]
 8000c22:	0759      	lsls	r1, r3, #29
 8000c24:	d505      	bpl.n	8000c32 <__sflush_r+0x42>
 8000c26:	6863      	ldr	r3, [r4, #4]
 8000c28:	1ad2      	subs	r2, r2, r3
 8000c2a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000c2c:	b10b      	cbz	r3, 8000c32 <__sflush_r+0x42>
 8000c2e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000c30:	1ad2      	subs	r2, r2, r3
 8000c32:	2300      	movs	r3, #0
 8000c34:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000c36:	6a21      	ldr	r1, [r4, #32]
 8000c38:	4628      	mov	r0, r5
 8000c3a:	47b0      	blx	r6
 8000c3c:	1c43      	adds	r3, r0, #1
 8000c3e:	89a3      	ldrh	r3, [r4, #12]
 8000c40:	d106      	bne.n	8000c50 <__sflush_r+0x60>
 8000c42:	6829      	ldr	r1, [r5, #0]
 8000c44:	291d      	cmp	r1, #29
 8000c46:	d82b      	bhi.n	8000ca0 <__sflush_r+0xb0>
 8000c48:	4a28      	ldr	r2, [pc, #160]	@ (8000cec <__sflush_r+0xfc>)
 8000c4a:	40ca      	lsrs	r2, r1
 8000c4c:	07d6      	lsls	r6, r2, #31
 8000c4e:	d527      	bpl.n	8000ca0 <__sflush_r+0xb0>
 8000c50:	2200      	movs	r2, #0
 8000c52:	6062      	str	r2, [r4, #4]
 8000c54:	04d9      	lsls	r1, r3, #19
 8000c56:	6922      	ldr	r2, [r4, #16]
 8000c58:	6022      	str	r2, [r4, #0]
 8000c5a:	d504      	bpl.n	8000c66 <__sflush_r+0x76>
 8000c5c:	1c42      	adds	r2, r0, #1
 8000c5e:	d101      	bne.n	8000c64 <__sflush_r+0x74>
 8000c60:	682b      	ldr	r3, [r5, #0]
 8000c62:	b903      	cbnz	r3, 8000c66 <__sflush_r+0x76>
 8000c64:	6560      	str	r0, [r4, #84]	@ 0x54
 8000c66:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000c68:	602f      	str	r7, [r5, #0]
 8000c6a:	b1b9      	cbz	r1, 8000c9c <__sflush_r+0xac>
 8000c6c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000c70:	4299      	cmp	r1, r3
 8000c72:	d002      	beq.n	8000c7a <__sflush_r+0x8a>
 8000c74:	4628      	mov	r0, r5
 8000c76:	f7ff fec3 	bl	8000a00 <_free_r>
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	6363      	str	r3, [r4, #52]	@ 0x34
 8000c7e:	e00d      	b.n	8000c9c <__sflush_r+0xac>
 8000c80:	2301      	movs	r3, #1
 8000c82:	4628      	mov	r0, r5
 8000c84:	47b0      	blx	r6
 8000c86:	4602      	mov	r2, r0
 8000c88:	1c50      	adds	r0, r2, #1
 8000c8a:	d1c9      	bne.n	8000c20 <__sflush_r+0x30>
 8000c8c:	682b      	ldr	r3, [r5, #0]
 8000c8e:	2b00      	cmp	r3, #0
 8000c90:	d0c6      	beq.n	8000c20 <__sflush_r+0x30>
 8000c92:	2b1d      	cmp	r3, #29
 8000c94:	d001      	beq.n	8000c9a <__sflush_r+0xaa>
 8000c96:	2b16      	cmp	r3, #22
 8000c98:	d11d      	bne.n	8000cd6 <__sflush_r+0xe6>
 8000c9a:	602f      	str	r7, [r5, #0]
 8000c9c:	2000      	movs	r0, #0
 8000c9e:	e021      	b.n	8000ce4 <__sflush_r+0xf4>
 8000ca0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000ca4:	b21b      	sxth	r3, r3
 8000ca6:	e01a      	b.n	8000cde <__sflush_r+0xee>
 8000ca8:	690f      	ldr	r7, [r1, #16]
 8000caa:	2f00      	cmp	r7, #0
 8000cac:	d0f6      	beq.n	8000c9c <__sflush_r+0xac>
 8000cae:	0793      	lsls	r3, r2, #30
 8000cb0:	680e      	ldr	r6, [r1, #0]
 8000cb2:	bf08      	it	eq
 8000cb4:	694b      	ldreq	r3, [r1, #20]
 8000cb6:	600f      	str	r7, [r1, #0]
 8000cb8:	bf18      	it	ne
 8000cba:	2300      	movne	r3, #0
 8000cbc:	1bf6      	subs	r6, r6, r7
 8000cbe:	608b      	str	r3, [r1, #8]
 8000cc0:	2e00      	cmp	r6, #0
 8000cc2:	ddeb      	ble.n	8000c9c <__sflush_r+0xac>
 8000cc4:	6a21      	ldr	r1, [r4, #32]
 8000cc6:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000cca:	4633      	mov	r3, r6
 8000ccc:	463a      	mov	r2, r7
 8000cce:	4628      	mov	r0, r5
 8000cd0:	47e0      	blx	ip
 8000cd2:	2800      	cmp	r0, #0
 8000cd4:	dc07      	bgt.n	8000ce6 <__sflush_r+0xf6>
 8000cd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000cda:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000cde:	81a3      	strh	r3, [r4, #12]
 8000ce0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ce6:	4407      	add	r7, r0
 8000ce8:	1a36      	subs	r6, r6, r0
 8000cea:	e7e9      	b.n	8000cc0 <__sflush_r+0xd0>
 8000cec:	20400001 	.word	0x20400001

08000cf0 <_fflush_r>:
 8000cf0:	b538      	push	{r3, r4, r5, lr}
 8000cf2:	690b      	ldr	r3, [r1, #16]
 8000cf4:	4605      	mov	r5, r0
 8000cf6:	460c      	mov	r4, r1
 8000cf8:	b913      	cbnz	r3, 8000d00 <_fflush_r+0x10>
 8000cfa:	2500      	movs	r5, #0
 8000cfc:	4628      	mov	r0, r5
 8000cfe:	bd38      	pop	{r3, r4, r5, pc}
 8000d00:	b118      	cbz	r0, 8000d0a <_fflush_r+0x1a>
 8000d02:	6a03      	ldr	r3, [r0, #32]
 8000d04:	b90b      	cbnz	r3, 8000d0a <_fflush_r+0x1a>
 8000d06:	f7ff fc93 	bl	8000630 <__sinit>
 8000d0a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d0f3      	beq.n	8000cfa <_fflush_r+0xa>
 8000d12:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000d14:	07d0      	lsls	r0, r2, #31
 8000d16:	d404      	bmi.n	8000d22 <_fflush_r+0x32>
 8000d18:	0599      	lsls	r1, r3, #22
 8000d1a:	d402      	bmi.n	8000d22 <_fflush_r+0x32>
 8000d1c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000d1e:	f7ff fe6c 	bl	80009fa <__retarget_lock_acquire_recursive>
 8000d22:	4628      	mov	r0, r5
 8000d24:	4621      	mov	r1, r4
 8000d26:	f7ff ff63 	bl	8000bf0 <__sflush_r>
 8000d2a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000d2c:	07da      	lsls	r2, r3, #31
 8000d2e:	4605      	mov	r5, r0
 8000d30:	d4e4      	bmi.n	8000cfc <_fflush_r+0xc>
 8000d32:	89a3      	ldrh	r3, [r4, #12]
 8000d34:	059b      	lsls	r3, r3, #22
 8000d36:	d4e1      	bmi.n	8000cfc <_fflush_r+0xc>
 8000d38:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000d3a:	f7ff fe5f 	bl	80009fc <__retarget_lock_release_recursive>
 8000d3e:	e7dd      	b.n	8000cfc <_fflush_r+0xc>

08000d40 <__swhatbuf_r>:
 8000d40:	b570      	push	{r4, r5, r6, lr}
 8000d42:	460c      	mov	r4, r1
 8000d44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d48:	2900      	cmp	r1, #0
 8000d4a:	b096      	sub	sp, #88	@ 0x58
 8000d4c:	4615      	mov	r5, r2
 8000d4e:	461e      	mov	r6, r3
 8000d50:	da0d      	bge.n	8000d6e <__swhatbuf_r+0x2e>
 8000d52:	89a3      	ldrh	r3, [r4, #12]
 8000d54:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000d58:	f04f 0100 	mov.w	r1, #0
 8000d5c:	bf14      	ite	ne
 8000d5e:	2340      	movne	r3, #64	@ 0x40
 8000d60:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000d64:	2000      	movs	r0, #0
 8000d66:	6031      	str	r1, [r6, #0]
 8000d68:	602b      	str	r3, [r5, #0]
 8000d6a:	b016      	add	sp, #88	@ 0x58
 8000d6c:	bd70      	pop	{r4, r5, r6, pc}
 8000d6e:	466a      	mov	r2, sp
 8000d70:	f000 f848 	bl	8000e04 <_fstat_r>
 8000d74:	2800      	cmp	r0, #0
 8000d76:	dbec      	blt.n	8000d52 <__swhatbuf_r+0x12>
 8000d78:	9901      	ldr	r1, [sp, #4]
 8000d7a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000d7e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000d82:	4259      	negs	r1, r3
 8000d84:	4159      	adcs	r1, r3
 8000d86:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000d8a:	e7eb      	b.n	8000d64 <__swhatbuf_r+0x24>

08000d8c <__smakebuf_r>:
 8000d8c:	898b      	ldrh	r3, [r1, #12]
 8000d8e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d90:	079d      	lsls	r5, r3, #30
 8000d92:	4606      	mov	r6, r0
 8000d94:	460c      	mov	r4, r1
 8000d96:	d507      	bpl.n	8000da8 <__smakebuf_r+0x1c>
 8000d98:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000d9c:	6023      	str	r3, [r4, #0]
 8000d9e:	6123      	str	r3, [r4, #16]
 8000da0:	2301      	movs	r3, #1
 8000da2:	6163      	str	r3, [r4, #20]
 8000da4:	b003      	add	sp, #12
 8000da6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000da8:	ab01      	add	r3, sp, #4
 8000daa:	466a      	mov	r2, sp
 8000dac:	f7ff ffc8 	bl	8000d40 <__swhatbuf_r>
 8000db0:	9f00      	ldr	r7, [sp, #0]
 8000db2:	4605      	mov	r5, r0
 8000db4:	4639      	mov	r1, r7
 8000db6:	4630      	mov	r0, r6
 8000db8:	f7ff fe8e 	bl	8000ad8 <_malloc_r>
 8000dbc:	b948      	cbnz	r0, 8000dd2 <__smakebuf_r+0x46>
 8000dbe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000dc2:	059a      	lsls	r2, r3, #22
 8000dc4:	d4ee      	bmi.n	8000da4 <__smakebuf_r+0x18>
 8000dc6:	f023 0303 	bic.w	r3, r3, #3
 8000dca:	f043 0302 	orr.w	r3, r3, #2
 8000dce:	81a3      	strh	r3, [r4, #12]
 8000dd0:	e7e2      	b.n	8000d98 <__smakebuf_r+0xc>
 8000dd2:	89a3      	ldrh	r3, [r4, #12]
 8000dd4:	6020      	str	r0, [r4, #0]
 8000dd6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000dda:	81a3      	strh	r3, [r4, #12]
 8000ddc:	9b01      	ldr	r3, [sp, #4]
 8000dde:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000de2:	b15b      	cbz	r3, 8000dfc <__smakebuf_r+0x70>
 8000de4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000de8:	4630      	mov	r0, r6
 8000dea:	f000 f81d 	bl	8000e28 <_isatty_r>
 8000dee:	b128      	cbz	r0, 8000dfc <__smakebuf_r+0x70>
 8000df0:	89a3      	ldrh	r3, [r4, #12]
 8000df2:	f023 0303 	bic.w	r3, r3, #3
 8000df6:	f043 0301 	orr.w	r3, r3, #1
 8000dfa:	81a3      	strh	r3, [r4, #12]
 8000dfc:	89a3      	ldrh	r3, [r4, #12]
 8000dfe:	431d      	orrs	r5, r3
 8000e00:	81a5      	strh	r5, [r4, #12]
 8000e02:	e7cf      	b.n	8000da4 <__smakebuf_r+0x18>

08000e04 <_fstat_r>:
 8000e04:	b538      	push	{r3, r4, r5, lr}
 8000e06:	4d07      	ldr	r5, [pc, #28]	@ (8000e24 <_fstat_r+0x20>)
 8000e08:	2300      	movs	r3, #0
 8000e0a:	4604      	mov	r4, r0
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	4611      	mov	r1, r2
 8000e10:	602b      	str	r3, [r5, #0]
 8000e12:	f000 f942 	bl	800109a <_fstat>
 8000e16:	1c43      	adds	r3, r0, #1
 8000e18:	d102      	bne.n	8000e20 <_fstat_r+0x1c>
 8000e1a:	682b      	ldr	r3, [r5, #0]
 8000e1c:	b103      	cbz	r3, 8000e20 <_fstat_r+0x1c>
 8000e1e:	6023      	str	r3, [r4, #0]
 8000e20:	bd38      	pop	{r3, r4, r5, pc}
 8000e22:	bf00      	nop
 8000e24:	200001c0 	.word	0x200001c0

08000e28 <_isatty_r>:
 8000e28:	b538      	push	{r3, r4, r5, lr}
 8000e2a:	4d06      	ldr	r5, [pc, #24]	@ (8000e44 <_isatty_r+0x1c>)
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	4604      	mov	r4, r0
 8000e30:	4608      	mov	r0, r1
 8000e32:	602b      	str	r3, [r5, #0]
 8000e34:	f000 fa96 	bl	8001364 <_isatty>
 8000e38:	1c43      	adds	r3, r0, #1
 8000e3a:	d102      	bne.n	8000e42 <_isatty_r+0x1a>
 8000e3c:	682b      	ldr	r3, [r5, #0]
 8000e3e:	b103      	cbz	r3, 8000e42 <_isatty_r+0x1a>
 8000e40:	6023      	str	r3, [r4, #0]
 8000e42:	bd38      	pop	{r3, r4, r5, pc}
 8000e44:	200001c0 	.word	0x200001c0

08000e48 <_sbrk_r>:
 8000e48:	b538      	push	{r3, r4, r5, lr}
 8000e4a:	4d06      	ldr	r5, [pc, #24]	@ (8000e64 <_sbrk_r+0x1c>)
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	4604      	mov	r4, r0
 8000e50:	4608      	mov	r0, r1
 8000e52:	602b      	str	r3, [r5, #0]
 8000e54:	f7ff fb00 	bl	8000458 <_sbrk>
 8000e58:	1c43      	adds	r3, r0, #1
 8000e5a:	d102      	bne.n	8000e62 <_sbrk_r+0x1a>
 8000e5c:	682b      	ldr	r3, [r5, #0]
 8000e5e:	b103      	cbz	r3, 8000e62 <_sbrk_r+0x1a>
 8000e60:	6023      	str	r3, [r4, #0]
 8000e62:	bd38      	pop	{r3, r4, r5, pc}
 8000e64:	200001c0 	.word	0x200001c0

08000e68 <findslot>:
 8000e68:	4b0a      	ldr	r3, [pc, #40]	@ (8000e94 <findslot+0x2c>)
 8000e6a:	b510      	push	{r4, lr}
 8000e6c:	4604      	mov	r4, r0
 8000e6e:	6818      	ldr	r0, [r3, #0]
 8000e70:	b118      	cbz	r0, 8000e7a <findslot+0x12>
 8000e72:	6a03      	ldr	r3, [r0, #32]
 8000e74:	b90b      	cbnz	r3, 8000e7a <findslot+0x12>
 8000e76:	f7ff fbdb 	bl	8000630 <__sinit>
 8000e7a:	2c13      	cmp	r4, #19
 8000e7c:	d807      	bhi.n	8000e8e <findslot+0x26>
 8000e7e:	4806      	ldr	r0, [pc, #24]	@ (8000e98 <findslot+0x30>)
 8000e80:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000e84:	3201      	adds	r2, #1
 8000e86:	d002      	beq.n	8000e8e <findslot+0x26>
 8000e88:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8000e8c:	bd10      	pop	{r4, pc}
 8000e8e:	2000      	movs	r0, #0
 8000e90:	e7fc      	b.n	8000e8c <findslot+0x24>
 8000e92:	bf00      	nop
 8000e94:	2000000c 	.word	0x2000000c
 8000e98:	200001dc 	.word	0x200001dc

08000e9c <error>:
 8000e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e9e:	4604      	mov	r4, r0
 8000ea0:	f7ff fd80 	bl	80009a4 <__errno>
 8000ea4:	2613      	movs	r6, #19
 8000ea6:	4605      	mov	r5, r0
 8000ea8:	2700      	movs	r7, #0
 8000eaa:	4630      	mov	r0, r6
 8000eac:	4639      	mov	r1, r7
 8000eae:	beab      	bkpt	0x00ab
 8000eb0:	4606      	mov	r6, r0
 8000eb2:	602e      	str	r6, [r5, #0]
 8000eb4:	4620      	mov	r0, r4
 8000eb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000eb8 <checkerror>:
 8000eb8:	1c43      	adds	r3, r0, #1
 8000eba:	d101      	bne.n	8000ec0 <checkerror+0x8>
 8000ebc:	f7ff bfee 	b.w	8000e9c <error>
 8000ec0:	4770      	bx	lr

08000ec2 <_swiread>:
 8000ec2:	b530      	push	{r4, r5, lr}
 8000ec4:	b085      	sub	sp, #20
 8000ec6:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000eca:	9203      	str	r2, [sp, #12]
 8000ecc:	2406      	movs	r4, #6
 8000ece:	ad01      	add	r5, sp, #4
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	4629      	mov	r1, r5
 8000ed4:	beab      	bkpt	0x00ab
 8000ed6:	4604      	mov	r4, r0
 8000ed8:	4620      	mov	r0, r4
 8000eda:	f7ff ffed 	bl	8000eb8 <checkerror>
 8000ede:	b005      	add	sp, #20
 8000ee0:	bd30      	pop	{r4, r5, pc}

08000ee2 <_read>:
 8000ee2:	b570      	push	{r4, r5, r6, lr}
 8000ee4:	460e      	mov	r6, r1
 8000ee6:	4614      	mov	r4, r2
 8000ee8:	f7ff ffbe 	bl	8000e68 <findslot>
 8000eec:	4605      	mov	r5, r0
 8000eee:	b930      	cbnz	r0, 8000efe <_read+0x1c>
 8000ef0:	f7ff fd58 	bl	80009a4 <__errno>
 8000ef4:	2309      	movs	r3, #9
 8000ef6:	6003      	str	r3, [r0, #0]
 8000ef8:	f04f 30ff 	mov.w	r0, #4294967295
 8000efc:	bd70      	pop	{r4, r5, r6, pc}
 8000efe:	6800      	ldr	r0, [r0, #0]
 8000f00:	4622      	mov	r2, r4
 8000f02:	4631      	mov	r1, r6
 8000f04:	f7ff ffdd 	bl	8000ec2 <_swiread>
 8000f08:	1c43      	adds	r3, r0, #1
 8000f0a:	d0f5      	beq.n	8000ef8 <_read+0x16>
 8000f0c:	686b      	ldr	r3, [r5, #4]
 8000f0e:	1a20      	subs	r0, r4, r0
 8000f10:	4403      	add	r3, r0
 8000f12:	606b      	str	r3, [r5, #4]
 8000f14:	e7f2      	b.n	8000efc <_read+0x1a>

08000f16 <_swilseek>:
 8000f16:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000f18:	460c      	mov	r4, r1
 8000f1a:	4616      	mov	r6, r2
 8000f1c:	f7ff ffa4 	bl	8000e68 <findslot>
 8000f20:	4605      	mov	r5, r0
 8000f22:	b940      	cbnz	r0, 8000f36 <_swilseek+0x20>
 8000f24:	f7ff fd3e 	bl	80009a4 <__errno>
 8000f28:	2309      	movs	r3, #9
 8000f2a:	6003      	str	r3, [r0, #0]
 8000f2c:	f04f 34ff 	mov.w	r4, #4294967295
 8000f30:	4620      	mov	r0, r4
 8000f32:	b003      	add	sp, #12
 8000f34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f36:	2e02      	cmp	r6, #2
 8000f38:	d903      	bls.n	8000f42 <_swilseek+0x2c>
 8000f3a:	f7ff fd33 	bl	80009a4 <__errno>
 8000f3e:	2316      	movs	r3, #22
 8000f40:	e7f3      	b.n	8000f2a <_swilseek+0x14>
 8000f42:	2e01      	cmp	r6, #1
 8000f44:	d112      	bne.n	8000f6c <_swilseek+0x56>
 8000f46:	6843      	ldr	r3, [r0, #4]
 8000f48:	18e4      	adds	r4, r4, r3
 8000f4a:	d4f6      	bmi.n	8000f3a <_swilseek+0x24>
 8000f4c:	682b      	ldr	r3, [r5, #0]
 8000f4e:	260a      	movs	r6, #10
 8000f50:	e9cd 3400 	strd	r3, r4, [sp]
 8000f54:	466f      	mov	r7, sp
 8000f56:	4630      	mov	r0, r6
 8000f58:	4639      	mov	r1, r7
 8000f5a:	beab      	bkpt	0x00ab
 8000f5c:	4606      	mov	r6, r0
 8000f5e:	4630      	mov	r0, r6
 8000f60:	f7ff ffaa 	bl	8000eb8 <checkerror>
 8000f64:	2800      	cmp	r0, #0
 8000f66:	dbe1      	blt.n	8000f2c <_swilseek+0x16>
 8000f68:	606c      	str	r4, [r5, #4]
 8000f6a:	e7e1      	b.n	8000f30 <_swilseek+0x1a>
 8000f6c:	2e02      	cmp	r6, #2
 8000f6e:	6803      	ldr	r3, [r0, #0]
 8000f70:	d1ec      	bne.n	8000f4c <_swilseek+0x36>
 8000f72:	9300      	str	r3, [sp, #0]
 8000f74:	260c      	movs	r6, #12
 8000f76:	466f      	mov	r7, sp
 8000f78:	4630      	mov	r0, r6
 8000f7a:	4639      	mov	r1, r7
 8000f7c:	beab      	bkpt	0x00ab
 8000f7e:	4606      	mov	r6, r0
 8000f80:	4630      	mov	r0, r6
 8000f82:	f7ff ff99 	bl	8000eb8 <checkerror>
 8000f86:	1c43      	adds	r3, r0, #1
 8000f88:	d0d0      	beq.n	8000f2c <_swilseek+0x16>
 8000f8a:	4404      	add	r4, r0
 8000f8c:	e7de      	b.n	8000f4c <_swilseek+0x36>

08000f8e <_lseek>:
 8000f8e:	f7ff bfc2 	b.w	8000f16 <_swilseek>

08000f92 <_swiwrite>:
 8000f92:	b530      	push	{r4, r5, lr}
 8000f94:	b085      	sub	sp, #20
 8000f96:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000f9a:	9203      	str	r2, [sp, #12]
 8000f9c:	2405      	movs	r4, #5
 8000f9e:	ad01      	add	r5, sp, #4
 8000fa0:	4620      	mov	r0, r4
 8000fa2:	4629      	mov	r1, r5
 8000fa4:	beab      	bkpt	0x00ab
 8000fa6:	4604      	mov	r4, r0
 8000fa8:	4620      	mov	r0, r4
 8000faa:	f7ff ff85 	bl	8000eb8 <checkerror>
 8000fae:	b005      	add	sp, #20
 8000fb0:	bd30      	pop	{r4, r5, pc}

08000fb2 <_write>:
 8000fb2:	b570      	push	{r4, r5, r6, lr}
 8000fb4:	460e      	mov	r6, r1
 8000fb6:	4615      	mov	r5, r2
 8000fb8:	f7ff ff56 	bl	8000e68 <findslot>
 8000fbc:	4604      	mov	r4, r0
 8000fbe:	b930      	cbnz	r0, 8000fce <_write+0x1c>
 8000fc0:	f7ff fcf0 	bl	80009a4 <__errno>
 8000fc4:	2309      	movs	r3, #9
 8000fc6:	6003      	str	r3, [r0, #0]
 8000fc8:	f04f 30ff 	mov.w	r0, #4294967295
 8000fcc:	bd70      	pop	{r4, r5, r6, pc}
 8000fce:	6800      	ldr	r0, [r0, #0]
 8000fd0:	462a      	mov	r2, r5
 8000fd2:	4631      	mov	r1, r6
 8000fd4:	f7ff ffdd 	bl	8000f92 <_swiwrite>
 8000fd8:	1e03      	subs	r3, r0, #0
 8000fda:	dbf5      	blt.n	8000fc8 <_write+0x16>
 8000fdc:	6862      	ldr	r2, [r4, #4]
 8000fde:	1ae8      	subs	r0, r5, r3
 8000fe0:	4402      	add	r2, r0
 8000fe2:	42ab      	cmp	r3, r5
 8000fe4:	6062      	str	r2, [r4, #4]
 8000fe6:	d1f1      	bne.n	8000fcc <_write+0x1a>
 8000fe8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000fec:	2000      	movs	r0, #0
 8000fee:	f7ff bf55 	b.w	8000e9c <error>

08000ff2 <_swiclose>:
 8000ff2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000ff4:	2402      	movs	r4, #2
 8000ff6:	9001      	str	r0, [sp, #4]
 8000ff8:	ad01      	add	r5, sp, #4
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	4629      	mov	r1, r5
 8000ffe:	beab      	bkpt	0x00ab
 8001000:	4604      	mov	r4, r0
 8001002:	4620      	mov	r0, r4
 8001004:	f7ff ff58 	bl	8000eb8 <checkerror>
 8001008:	b003      	add	sp, #12
 800100a:	bd30      	pop	{r4, r5, pc}

0800100c <_close>:
 800100c:	b538      	push	{r3, r4, r5, lr}
 800100e:	4605      	mov	r5, r0
 8001010:	f7ff ff2a 	bl	8000e68 <findslot>
 8001014:	4604      	mov	r4, r0
 8001016:	b930      	cbnz	r0, 8001026 <_close+0x1a>
 8001018:	f7ff fcc4 	bl	80009a4 <__errno>
 800101c:	2309      	movs	r3, #9
 800101e:	6003      	str	r3, [r0, #0]
 8001020:	f04f 30ff 	mov.w	r0, #4294967295
 8001024:	bd38      	pop	{r3, r4, r5, pc}
 8001026:	3d01      	subs	r5, #1
 8001028:	2d01      	cmp	r5, #1
 800102a:	d809      	bhi.n	8001040 <_close+0x34>
 800102c:	4b09      	ldr	r3, [pc, #36]	@ (8001054 <_close+0x48>)
 800102e:	689a      	ldr	r2, [r3, #8]
 8001030:	691b      	ldr	r3, [r3, #16]
 8001032:	429a      	cmp	r2, r3
 8001034:	d104      	bne.n	8001040 <_close+0x34>
 8001036:	f04f 33ff 	mov.w	r3, #4294967295
 800103a:	6003      	str	r3, [r0, #0]
 800103c:	2000      	movs	r0, #0
 800103e:	e7f1      	b.n	8001024 <_close+0x18>
 8001040:	6820      	ldr	r0, [r4, #0]
 8001042:	f7ff ffd6 	bl	8000ff2 <_swiclose>
 8001046:	2800      	cmp	r0, #0
 8001048:	d1ec      	bne.n	8001024 <_close+0x18>
 800104a:	f04f 33ff 	mov.w	r3, #4294967295
 800104e:	6023      	str	r3, [r4, #0]
 8001050:	e7e8      	b.n	8001024 <_close+0x18>
 8001052:	bf00      	nop
 8001054:	200001dc 	.word	0x200001dc

08001058 <_swistat>:
 8001058:	b570      	push	{r4, r5, r6, lr}
 800105a:	460c      	mov	r4, r1
 800105c:	f7ff ff04 	bl	8000e68 <findslot>
 8001060:	4605      	mov	r5, r0
 8001062:	b930      	cbnz	r0, 8001072 <_swistat+0x1a>
 8001064:	f7ff fc9e 	bl	80009a4 <__errno>
 8001068:	2309      	movs	r3, #9
 800106a:	6003      	str	r3, [r0, #0]
 800106c:	f04f 30ff 	mov.w	r0, #4294967295
 8001070:	bd70      	pop	{r4, r5, r6, pc}
 8001072:	6863      	ldr	r3, [r4, #4]
 8001074:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001078:	6063      	str	r3, [r4, #4]
 800107a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800107e:	64a3      	str	r3, [r4, #72]	@ 0x48
 8001080:	260c      	movs	r6, #12
 8001082:	4630      	mov	r0, r6
 8001084:	4629      	mov	r1, r5
 8001086:	beab      	bkpt	0x00ab
 8001088:	4605      	mov	r5, r0
 800108a:	4628      	mov	r0, r5
 800108c:	f7ff ff14 	bl	8000eb8 <checkerror>
 8001090:	1c43      	adds	r3, r0, #1
 8001092:	d0eb      	beq.n	800106c <_swistat+0x14>
 8001094:	6120      	str	r0, [r4, #16]
 8001096:	2000      	movs	r0, #0
 8001098:	e7ea      	b.n	8001070 <_swistat+0x18>

0800109a <_fstat>:
 800109a:	460b      	mov	r3, r1
 800109c:	b510      	push	{r4, lr}
 800109e:	2100      	movs	r1, #0
 80010a0:	4604      	mov	r4, r0
 80010a2:	2258      	movs	r2, #88	@ 0x58
 80010a4:	4618      	mov	r0, r3
 80010a6:	f7ff fc2f 	bl	8000908 <memset>
 80010aa:	4601      	mov	r1, r0
 80010ac:	4620      	mov	r0, r4
 80010ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80010b2:	f7ff bfd1 	b.w	8001058 <_swistat>

080010b6 <_stat>:
 80010b6:	b538      	push	{r3, r4, r5, lr}
 80010b8:	460d      	mov	r5, r1
 80010ba:	4604      	mov	r4, r0
 80010bc:	2258      	movs	r2, #88	@ 0x58
 80010be:	2100      	movs	r1, #0
 80010c0:	4628      	mov	r0, r5
 80010c2:	f7ff fc21 	bl	8000908 <memset>
 80010c6:	4620      	mov	r0, r4
 80010c8:	2100      	movs	r1, #0
 80010ca:	f000 f811 	bl	80010f0 <_swiopen>
 80010ce:	1c43      	adds	r3, r0, #1
 80010d0:	4604      	mov	r4, r0
 80010d2:	d00b      	beq.n	80010ec <_stat+0x36>
 80010d4:	686b      	ldr	r3, [r5, #4]
 80010d6:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 80010da:	606b      	str	r3, [r5, #4]
 80010dc:	4629      	mov	r1, r5
 80010de:	f7ff ffbb 	bl	8001058 <_swistat>
 80010e2:	4605      	mov	r5, r0
 80010e4:	4620      	mov	r0, r4
 80010e6:	f7ff ff91 	bl	800100c <_close>
 80010ea:	462c      	mov	r4, r5
 80010ec:	4620      	mov	r0, r4
 80010ee:	bd38      	pop	{r3, r4, r5, pc}

080010f0 <_swiopen>:
 80010f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010f4:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 80011a0 <_swiopen+0xb0>
 80010f8:	b096      	sub	sp, #88	@ 0x58
 80010fa:	4607      	mov	r7, r0
 80010fc:	460e      	mov	r6, r1
 80010fe:	2400      	movs	r4, #0
 8001100:	f859 3034 	ldr.w	r3, [r9, r4, lsl #3]
 8001104:	3301      	adds	r3, #1
 8001106:	ea4f 08c4 	mov.w	r8, r4, lsl #3
 800110a:	d032      	beq.n	8001172 <_swiopen+0x82>
 800110c:	3401      	adds	r4, #1
 800110e:	2c14      	cmp	r4, #20
 8001110:	d1f6      	bne.n	8001100 <_swiopen+0x10>
 8001112:	f7ff fc47 	bl	80009a4 <__errno>
 8001116:	2318      	movs	r3, #24
 8001118:	e03a      	b.n	8001190 <_swiopen+0xa0>
 800111a:	f3c6 4500 	ubfx	r5, r6, #16, #1
 800111e:	f240 6301 	movw	r3, #1537	@ 0x601
 8001122:	07b2      	lsls	r2, r6, #30
 8001124:	bf48      	it	mi
 8001126:	f045 0502 	orrmi.w	r5, r5, #2
 800112a:	421e      	tst	r6, r3
 800112c:	bf18      	it	ne
 800112e:	f045 0504 	orrne.w	r5, r5, #4
 8001132:	0733      	lsls	r3, r6, #28
 8001134:	bf48      	it	mi
 8001136:	f025 0504 	bicmi.w	r5, r5, #4
 800113a:	4638      	mov	r0, r7
 800113c:	bf48      	it	mi
 800113e:	f045 0508 	orrmi.w	r5, r5, #8
 8001142:	9700      	str	r7, [sp, #0]
 8001144:	f7ff f83e 	bl	80001c4 <strlen>
 8001148:	e9cd 5001 	strd	r5, r0, [sp, #4]
 800114c:	2501      	movs	r5, #1
 800114e:	4628      	mov	r0, r5
 8001150:	4651      	mov	r1, sl
 8001152:	beab      	bkpt	0x00ab
 8001154:	4605      	mov	r5, r0
 8001156:	2d00      	cmp	r5, #0
 8001158:	db06      	blt.n	8001168 <_swiopen+0x78>
 800115a:	44c8      	add	r8, r9
 800115c:	2300      	movs	r3, #0
 800115e:	f849 5034 	str.w	r5, [r9, r4, lsl #3]
 8001162:	f8c8 3004 	str.w	r3, [r8, #4]
 8001166:	e016      	b.n	8001196 <_swiopen+0xa6>
 8001168:	4628      	mov	r0, r5
 800116a:	f7ff fe97 	bl	8000e9c <error>
 800116e:	4604      	mov	r4, r0
 8001170:	e011      	b.n	8001196 <_swiopen+0xa6>
 8001172:	f406 6320 	and.w	r3, r6, #2560	@ 0xa00
 8001176:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 800117a:	46ea      	mov	sl, sp
 800117c:	d1cd      	bne.n	800111a <_swiopen+0x2a>
 800117e:	4651      	mov	r1, sl
 8001180:	4638      	mov	r0, r7
 8001182:	f7ff ff98 	bl	80010b6 <_stat>
 8001186:	3001      	adds	r0, #1
 8001188:	d0c7      	beq.n	800111a <_swiopen+0x2a>
 800118a:	f7ff fc0b 	bl	80009a4 <__errno>
 800118e:	2311      	movs	r3, #17
 8001190:	6003      	str	r3, [r0, #0]
 8001192:	f04f 34ff 	mov.w	r4, #4294967295
 8001196:	4620      	mov	r0, r4
 8001198:	b016      	add	sp, #88	@ 0x58
 800119a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800119e:	bf00      	nop
 80011a0:	200001dc 	.word	0x200001dc

080011a4 <_get_semihosting_exts>:
 80011a4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80011a8:	4606      	mov	r6, r0
 80011aa:	460f      	mov	r7, r1
 80011ac:	4829      	ldr	r0, [pc, #164]	@ (8001254 <_get_semihosting_exts+0xb0>)
 80011ae:	2100      	movs	r1, #0
 80011b0:	4615      	mov	r5, r2
 80011b2:	f7ff ff9d 	bl	80010f0 <_swiopen>
 80011b6:	462a      	mov	r2, r5
 80011b8:	4604      	mov	r4, r0
 80011ba:	2100      	movs	r1, #0
 80011bc:	4630      	mov	r0, r6
 80011be:	f7ff fba3 	bl	8000908 <memset>
 80011c2:	1c63      	adds	r3, r4, #1
 80011c4:	d014      	beq.n	80011f0 <_get_semihosting_exts+0x4c>
 80011c6:	4620      	mov	r0, r4
 80011c8:	f7ff fe4e 	bl	8000e68 <findslot>
 80011cc:	f04f 080c 	mov.w	r8, #12
 80011d0:	4681      	mov	r9, r0
 80011d2:	4640      	mov	r0, r8
 80011d4:	4649      	mov	r1, r9
 80011d6:	beab      	bkpt	0x00ab
 80011d8:	4680      	mov	r8, r0
 80011da:	4640      	mov	r0, r8
 80011dc:	f7ff fe6c 	bl	8000eb8 <checkerror>
 80011e0:	2803      	cmp	r0, #3
 80011e2:	dd02      	ble.n	80011ea <_get_semihosting_exts+0x46>
 80011e4:	1ec3      	subs	r3, r0, #3
 80011e6:	42ab      	cmp	r3, r5
 80011e8:	dc07      	bgt.n	80011fa <_get_semihosting_exts+0x56>
 80011ea:	4620      	mov	r0, r4
 80011ec:	f7ff ff0e 	bl	800100c <_close>
 80011f0:	f04f 30ff 	mov.w	r0, #4294967295
 80011f4:	b003      	add	sp, #12
 80011f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80011fa:	2204      	movs	r2, #4
 80011fc:	eb0d 0102 	add.w	r1, sp, r2
 8001200:	4620      	mov	r0, r4
 8001202:	f7ff fe6e 	bl	8000ee2 <_read>
 8001206:	2803      	cmp	r0, #3
 8001208:	ddef      	ble.n	80011ea <_get_semihosting_exts+0x46>
 800120a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800120e:	2b53      	cmp	r3, #83	@ 0x53
 8001210:	d1eb      	bne.n	80011ea <_get_semihosting_exts+0x46>
 8001212:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001216:	2b48      	cmp	r3, #72	@ 0x48
 8001218:	d1e7      	bne.n	80011ea <_get_semihosting_exts+0x46>
 800121a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800121e:	2b46      	cmp	r3, #70	@ 0x46
 8001220:	d1e3      	bne.n	80011ea <_get_semihosting_exts+0x46>
 8001222:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001226:	2b42      	cmp	r3, #66	@ 0x42
 8001228:	d1df      	bne.n	80011ea <_get_semihosting_exts+0x46>
 800122a:	2201      	movs	r2, #1
 800122c:	4639      	mov	r1, r7
 800122e:	4620      	mov	r0, r4
 8001230:	f7ff fe71 	bl	8000f16 <_swilseek>
 8001234:	2800      	cmp	r0, #0
 8001236:	dbd8      	blt.n	80011ea <_get_semihosting_exts+0x46>
 8001238:	462a      	mov	r2, r5
 800123a:	4631      	mov	r1, r6
 800123c:	4620      	mov	r0, r4
 800123e:	f7ff fe50 	bl	8000ee2 <_read>
 8001242:	4605      	mov	r5, r0
 8001244:	4620      	mov	r0, r4
 8001246:	f7ff fee1 	bl	800100c <_close>
 800124a:	4628      	mov	r0, r5
 800124c:	f7ff fe34 	bl	8000eb8 <checkerror>
 8001250:	e7d0      	b.n	80011f4 <_get_semihosting_exts+0x50>
 8001252:	bf00      	nop
 8001254:	080013f6 	.word	0x080013f6

08001258 <initialise_semihosting_exts>:
 8001258:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800125a:	4d0a      	ldr	r5, [pc, #40]	@ (8001284 <initialise_semihosting_exts+0x2c>)
 800125c:	4c0a      	ldr	r4, [pc, #40]	@ (8001288 <initialise_semihosting_exts+0x30>)
 800125e:	2100      	movs	r1, #0
 8001260:	2201      	movs	r2, #1
 8001262:	a801      	add	r0, sp, #4
 8001264:	6029      	str	r1, [r5, #0]
 8001266:	6022      	str	r2, [r4, #0]
 8001268:	f7ff ff9c 	bl	80011a4 <_get_semihosting_exts>
 800126c:	2800      	cmp	r0, #0
 800126e:	dd07      	ble.n	8001280 <initialise_semihosting_exts+0x28>
 8001270:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001274:	f003 0201 	and.w	r2, r3, #1
 8001278:	f003 0302 	and.w	r3, r3, #2
 800127c:	602a      	str	r2, [r5, #0]
 800127e:	6023      	str	r3, [r4, #0]
 8001280:	b003      	add	sp, #12
 8001282:	bd30      	pop	{r4, r5, pc}
 8001284:	20000060 	.word	0x20000060
 8001288:	2000005c 	.word	0x2000005c

0800128c <_has_ext_stdout_stderr>:
 800128c:	b510      	push	{r4, lr}
 800128e:	4c04      	ldr	r4, [pc, #16]	@ (80012a0 <_has_ext_stdout_stderr+0x14>)
 8001290:	6823      	ldr	r3, [r4, #0]
 8001292:	2b00      	cmp	r3, #0
 8001294:	da01      	bge.n	800129a <_has_ext_stdout_stderr+0xe>
 8001296:	f7ff ffdf 	bl	8001258 <initialise_semihosting_exts>
 800129a:	6820      	ldr	r0, [r4, #0]
 800129c:	bd10      	pop	{r4, pc}
 800129e:	bf00      	nop
 80012a0:	2000005c 	.word	0x2000005c

080012a4 <initialise_monitor_handles>:
 80012a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012a8:	b085      	sub	sp, #20
 80012aa:	f8df 90a4 	ldr.w	r9, [pc, #164]	@ 8001350 <initialise_monitor_handles+0xac>
 80012ae:	f8cd 9004 	str.w	r9, [sp, #4]
 80012b2:	2303      	movs	r3, #3
 80012b4:	2400      	movs	r4, #0
 80012b6:	9303      	str	r3, [sp, #12]
 80012b8:	af01      	add	r7, sp, #4
 80012ba:	9402      	str	r4, [sp, #8]
 80012bc:	2501      	movs	r5, #1
 80012be:	4628      	mov	r0, r5
 80012c0:	4639      	mov	r1, r7
 80012c2:	beab      	bkpt	0x00ab
 80012c4:	4605      	mov	r5, r0
 80012c6:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 8001354 <initialise_monitor_handles+0xb0>
 80012ca:	4623      	mov	r3, r4
 80012cc:	4c22      	ldr	r4, [pc, #136]	@ (8001358 <initialise_monitor_handles+0xb4>)
 80012ce:	f8c8 5000 	str.w	r5, [r8]
 80012d2:	f04f 32ff 	mov.w	r2, #4294967295
 80012d6:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 80012da:	3301      	adds	r3, #1
 80012dc:	2b14      	cmp	r3, #20
 80012de:	d1fa      	bne.n	80012d6 <initialise_monitor_handles+0x32>
 80012e0:	f7ff ffd4 	bl	800128c <_has_ext_stdout_stderr>
 80012e4:	4d1d      	ldr	r5, [pc, #116]	@ (800135c <initialise_monitor_handles+0xb8>)
 80012e6:	b1d0      	cbz	r0, 800131e <initialise_monitor_handles+0x7a>
 80012e8:	f04f 0a03 	mov.w	sl, #3
 80012ec:	2304      	movs	r3, #4
 80012ee:	f8cd 9004 	str.w	r9, [sp, #4]
 80012f2:	2601      	movs	r6, #1
 80012f4:	f8cd a00c 	str.w	sl, [sp, #12]
 80012f8:	9302      	str	r3, [sp, #8]
 80012fa:	4630      	mov	r0, r6
 80012fc:	4639      	mov	r1, r7
 80012fe:	beab      	bkpt	0x00ab
 8001300:	4683      	mov	fp, r0
 8001302:	4b17      	ldr	r3, [pc, #92]	@ (8001360 <initialise_monitor_handles+0xbc>)
 8001304:	f8cd 9004 	str.w	r9, [sp, #4]
 8001308:	f8c3 b000 	str.w	fp, [r3]
 800130c:	2308      	movs	r3, #8
 800130e:	f8cd a00c 	str.w	sl, [sp, #12]
 8001312:	9302      	str	r3, [sp, #8]
 8001314:	4630      	mov	r0, r6
 8001316:	4639      	mov	r1, r7
 8001318:	beab      	bkpt	0x00ab
 800131a:	4606      	mov	r6, r0
 800131c:	602e      	str	r6, [r5, #0]
 800131e:	682b      	ldr	r3, [r5, #0]
 8001320:	3301      	adds	r3, #1
 8001322:	bf02      	ittt	eq
 8001324:	4b0e      	ldreq	r3, [pc, #56]	@ (8001360 <initialise_monitor_handles+0xbc>)
 8001326:	681b      	ldreq	r3, [r3, #0]
 8001328:	602b      	streq	r3, [r5, #0]
 800132a:	2600      	movs	r6, #0
 800132c:	f8d8 3000 	ldr.w	r3, [r8]
 8001330:	6023      	str	r3, [r4, #0]
 8001332:	6066      	str	r6, [r4, #4]
 8001334:	f7ff ffaa 	bl	800128c <_has_ext_stdout_stderr>
 8001338:	b130      	cbz	r0, 8001348 <initialise_monitor_handles+0xa4>
 800133a:	4b09      	ldr	r3, [pc, #36]	@ (8001360 <initialise_monitor_handles+0xbc>)
 800133c:	681b      	ldr	r3, [r3, #0]
 800133e:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001348:	b005      	add	sp, #20
 800134a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800134e:	bf00      	nop
 8001350:	0800140c 	.word	0x0800140c
 8001354:	200001d8 	.word	0x200001d8
 8001358:	200001dc 	.word	0x200001dc
 800135c:	200001d0 	.word	0x200001d0
 8001360:	200001d4 	.word	0x200001d4

08001364 <_isatty>:
 8001364:	b570      	push	{r4, r5, r6, lr}
 8001366:	f7ff fd7f 	bl	8000e68 <findslot>
 800136a:	2409      	movs	r4, #9
 800136c:	4605      	mov	r5, r0
 800136e:	b920      	cbnz	r0, 800137a <_isatty+0x16>
 8001370:	f7ff fb18 	bl	80009a4 <__errno>
 8001374:	6004      	str	r4, [r0, #0]
 8001376:	2000      	movs	r0, #0
 8001378:	bd70      	pop	{r4, r5, r6, pc}
 800137a:	4620      	mov	r0, r4
 800137c:	4629      	mov	r1, r5
 800137e:	beab      	bkpt	0x00ab
 8001380:	4604      	mov	r4, r0
 8001382:	2c01      	cmp	r4, #1
 8001384:	4620      	mov	r0, r4
 8001386:	d0f7      	beq.n	8001378 <_isatty+0x14>
 8001388:	f7ff fb0c 	bl	80009a4 <__errno>
 800138c:	2513      	movs	r5, #19
 800138e:	4604      	mov	r4, r0
 8001390:	2600      	movs	r6, #0
 8001392:	4628      	mov	r0, r5
 8001394:	4631      	mov	r1, r6
 8001396:	beab      	bkpt	0x00ab
 8001398:	4605      	mov	r5, r0
 800139a:	6025      	str	r5, [r4, #0]
 800139c:	e7eb      	b.n	8001376 <_isatty+0x12>
	...

080013a0 <_init>:
 80013a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013a2:	bf00      	nop
 80013a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013a6:	bc08      	pop	{r3}
 80013a8:	469e      	mov	lr, r3
 80013aa:	4770      	bx	lr

080013ac <_fini>:
 80013ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ae:	bf00      	nop
 80013b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013b2:	bc08      	pop	{r3}
 80013b4:	469e      	mov	lr, r3
 80013b6:	4770      	bx	lr
